[{"/home/tanmoy/Desktop/toast/digia-project/src/index.tsx":"1","/home/tanmoy/Desktop/toast/digia-project/src/reportWebVitals.ts":"2","/home/tanmoy/Desktop/toast/digia-project/src/App.tsx":"3","/home/tanmoy/Desktop/toast/digia-project/src/Components/MainPageContainer/MainPageContainer.tsx":"4","/home/tanmoy/Desktop/toast/digia-project/src/Components/UserForm/UserForm.tsx":"5","/home/tanmoy/Desktop/toast/digia-project/src/Components/UserTable/UserTable.tsx":"6","/home/tanmoy/Desktop/toast/Dtest/src/index.tsx":"7","/home/tanmoy/Desktop/toast/Dtest/src/reportWebVitals.ts":"8","/home/tanmoy/Desktop/toast/Dtest/src/App.tsx":"9","/home/tanmoy/Desktop/toast/Dtest/src/Components/MainPageContainer/MainPageContainer.tsx":"10","/home/tanmoy/Desktop/toast/Dtest/src/Components/UserForm/UserForm.tsx":"11","/home/tanmoy/Desktop/toast/Dtest/src/Components/UserTable/UserTable.tsx":"12"},{"size":493,"mtime":1628409980578,"results":"13","hashOfConfig":"14"},{"size":422,"mtime":1628411118474,"results":"15","hashOfConfig":"14"},{"size":286,"mtime":1628410258210,"results":"16","hashOfConfig":"14"},{"size":344,"mtime":1628415825225,"results":"17","hashOfConfig":"14"},{"size":4078,"mtime":1628437239976,"results":"18","hashOfConfig":"14"},{"size":5284,"mtime":1628437669193,"results":"19","hashOfConfig":"14"},{"size":493,"mtime":1628409980578,"results":"20","hashOfConfig":"21"},{"size":422,"mtime":1628411118474,"results":"22","hashOfConfig":"21"},{"size":286,"mtime":1628410258210,"results":"23","hashOfConfig":"21"},{"size":344,"mtime":1628415825225,"results":"24","hashOfConfig":"21"},{"size":4078,"mtime":1628437239976,"results":"25","hashOfConfig":"21"},{"size":5316,"mtime":1628439509795,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1cr8rw0",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"cbe1r2",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tanmoy/Desktop/toast/digia-project/src/index.tsx",[],[],"/home/tanmoy/Desktop/toast/digia-project/src/reportWebVitals.ts",[],"/home/tanmoy/Desktop/toast/digia-project/src/App.tsx",["56"],"import React from 'react'\nimport './App.css'\nimport MainPageContainer from './Components/MainPageContainer/MainPageContainer'\n\nconst App = ({\n}): React.ReactElement => (\n  <div className='App'>\n    <MainPageContainer content={'test'}></MainPageContainer>\n  </div>\n)\n\nexport default App\n","/home/tanmoy/Desktop/toast/digia-project/src/Components/MainPageContainer/MainPageContainer.tsx",["57","58"],"import React, { useState } from 'react'\nimport UserForm from '../UserForm/UserForm'\nimport UserTable from '../UserTable/UserTable'\n\ninterface Props {\n  content: string;\n}\n\nconst MainPageContainer: React.FC<Props> = ({\n  content\n}): React.ReactElement => (\n  <div>\n    <UserForm />\n    <UserTable />\n  </div>\n)\n\nexport default MainPageContainer\n","/home/tanmoy/Desktop/toast/digia-project/src/Components/UserForm/UserForm.tsx",["59","60"],"/home/tanmoy/Desktop/toast/digia-project/src/Components/UserTable/UserTable.tsx",["61"],"/home/tanmoy/Desktop/toast/Dtest/src/index.tsx",[],["62","63"],"/home/tanmoy/Desktop/toast/Dtest/src/reportWebVitals.ts",[],"/home/tanmoy/Desktop/toast/Dtest/src/App.tsx",["64"],"/home/tanmoy/Desktop/toast/Dtest/src/Components/MainPageContainer/MainPageContainer.tsx",["65"],"/home/tanmoy/Desktop/toast/Dtest/src/Components/UserForm/UserForm.tsx",["66"],"import React, { useState } from 'react'\n\ninterface Props {\n  content?: string;\n}\n\nconst regExp = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/)\nconst API_HOST = 'http://localhost:4000'\nconst INVENTORY_API_URL = `${API_HOST}/inventory`\n\nconst UserForm: React.FC<Props> = ({}): React.ReactElement => {\n  const INITIAL_STATE = {\n    name: '',\n    email: '',\n    phoneNumer: ''\n  }\n  const [isError, setIsError] = useState(INITIAL_STATE)\n  const [inputValue, setInputValue] = useState({})\n\n  const [valid, setValid] = useState(true)\n\n  const formValid = (): void => {\n    Object.values(isError).forEach((val) => {\n      if (val.length > 0) {\n        setValid(false)\n      } else {\n        setValid(true)\n      }\n    })\n  }\n\n  const onSubmit = (e: any): void => {\n    e.preventDefault()\n    formValid()\n    if (valid) {\n      // eslint-disable-next-line no-console\n      console.log('value', inputValue)\n      updateInventory(inputValue)\n    } else {\n      // eslint-disable-next-line no-console\n      console.log('Form is invalid!')\n    }\n  }\n\n  const formValChange = (e: any): void => {\n    e.preventDefault()\n    const { name, value } = e.target\n\n    switch (name) {\n      case 'name':\n        const nameError =\n          value.length < 4 ? 'Atleast 4 characaters required' : ''\n        setIsError({\n          ...isError,\n          name: nameError\n        })\n        break\n      case 'email':\n        const emailError = regExp.test(value) ? '' : 'Email address is invalid'\n        setIsError({\n          ...isError,\n          email: emailError\n        })\n        break\n      case 'phoneNumer':\n        const phoneNumerError =\n          value.length < 6 ? 'Atleast 6 characaters required' : ''\n        setIsError({\n          ...isError,\n          phoneNumer: phoneNumerError\n        })\n        break\n      default:\n        break\n    }\n    setInputValue({\n      ...inputValue,\n      [name]: value\n    })\n  }\n  // eslint-disable-next-line no-console\n  console.log('inputValue', inputValue)\n\n  const updateInventory = (value): void => {\n    // eslint-disable-next-line no-console\n    console.log('unit price', value)\n    fetch(`${INVENTORY_API_URL}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        name: value.name,\n        email: value.email,\n        phoneNumber: value.phoneNumber\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    })\n  }\n\n  return (\n    <>\n      <form onSubmit={onSubmit} noValidate>\n        <div className='form-group'>\n          <label>Name</label>\n          <input\n            type='text'\n            className={\n              isError.name.length > 0\n                ? 'is-invalid form-control'\n                : 'form-control'\n            }\n            name='name'\n            onChange={formValChange}\n          />\n          {isError.name.length > 0 && (\n            <span className='invalid-feedback'>{isError.name}</span>\n          )}\n        </div>\n\n        <div className='form-group'>\n          <label>Email</label>\n          <input\n            type='email'\n            className={\n              isError.email.length > 0\n                ? 'is-invalid form-control'\n                : 'form-control'\n            }\n            name='email'\n            onChange={formValChange}\n          />\n          {isError.email.length > 0 && (\n            <span className='invalid-feedback'>{isError.email}</span>\n          )}\n        </div>\n\n        <div className='form-group'>\n          <label>phoneNumber</label>\n          <input\n            type='text'\n            className={\n              isError.phoneNumer.length > 0\n                ? 'is-invalid form-control'\n                : 'form-control'\n            }\n            name='phoneNumber'\n            onChange={formValChange}\n          />\n          {isError.phoneNumer.length > 0 && (\n            <span className='invalid-feedback'>{isError.phoneNumer}</span>\n          )}\n        </div>\n\n        <button type='submit' className='btn btn-block btn-danger'>\n          Create User\n        </button>\n      </form>\n    </>\n  )\n}\n\nexport default UserForm\n","/home/tanmoy/Desktop/toast/Dtest/src/Components/UserTable/UserTable.tsx",["67"],{"ruleId":"68","severity":1,"message":"69","line":5,"column":14,"nodeType":"70","messageId":"71","endLine":6,"endColumn":2},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":25},{"ruleId":"72","severity":1,"message":"76","line":10,"column":3,"nodeType":"74","messageId":"75","endLine":10,"endColumn":10},{"ruleId":"77","severity":1,"message":"78","line":32,"column":24,"nodeType":"79","messageId":"80","endLine":32,"endColumn":27,"suggestions":"81"},{"ruleId":"77","severity":1,"message":"78","line":45,"column":29,"nodeType":"79","messageId":"80","endLine":45,"endColumn":32,"suggestions":"82"},{"ruleId":"72","severity":1,"message":"83","line":75,"column":13,"nodeType":"74","messageId":"75","endLine":75,"endColumn":17},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":5,"column":14,"nodeType":"70","messageId":"90","endLine":6,"endColumn":2},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":11,"column":36,"nodeType":"70","messageId":"90","endLine":11,"endColumn":38},{"ruleId":"88","severity":1,"message":"89","line":16,"column":37,"nodeType":"70","messageId":"90","endLine":16,"endColumn":39},"@typescript-eslint/explicit-module-boundary-types","Object pattern argument should be typed.","ObjectPattern","missingArgTypeUnnamed","@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'content' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["91","92"],["93","94"],"'json' is defined but never used.","no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-empty-pattern","Unexpected empty object pattern.","unexpected",{"messageId":"97","fix":"98","desc":"99"},{"messageId":"100","fix":"101","desc":"102"},{"messageId":"97","fix":"103","desc":"99"},{"messageId":"100","fix":"104","desc":"102"},"no-global-assign","no-unsafe-negation","suggestUnknown",{"range":"105","text":"106"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"105","text":"107"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"108","text":"106"},{"range":"108","text":"107"},[745,748],"unknown","never",[1070,1073]]