{"ast":null,"code":"var _jsxFileName = \"/home/tanmoy/Desktop/map/Dtest/src/Components/FileLoader/FileLoader.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:5000\";\n\nconst FileLoader = ({\n  content\n}) => {\n  _s();\n\n  axios.post(\"http://localhost:8000/upload\", data, {// receive two parameter endpoint url ,form data \n  }).then(res => {\n    // then print response status\n    console.log(res.statusText);\n  });\n  const [selectedFile, setSelectedFile] = useState();\n  const [loaded, setLoaded] = useState(Number);\n\n  const onChangeHandler = event => {\n    console.log(event.target.files[0]);\n    setSelectedFile(event.target.files[0]);\n    setLoaded(0);\n  };\n\n  const onClickHandler = () => {\n    const data = new FormData(); // @ts-ignore\n\n    data.append(\"file\", selectedFile);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: onChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onClickHandler,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileLoader, \"yc93+Rl6V4hzMNetNdNvrj7yN5E=\");\n\n_c = FileLoader;\nexport default FileLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileLoader\");","map":{"version":3,"sources":["/home/tanmoy/Desktop/map/Dtest/src/Components/FileLoader/FileLoader.tsx"],"names":["React","useState","axios","API_BASE","FileLoader","content","post","data","then","res","console","log","statusText","selectedFile","setSelectedFile","loaded","setLoaded","Number","onChangeHandler","event","target","files","onClickHandler","FormData","append"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,QAAQ,GAAG,uBAAjB;;AAEA,MAAMC,UAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqC;AAAA;;AAEvEH,EAAAA,KAAK,CAACI,IAAN,CAAW,8BAAX,EAA2CC,IAA3C,EAAiD,CAAE;AAAF,GAAjD,EAEDC,IAFC,CAEIC,GAAG,IAAI;AAAE;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,UAAhB;AACD,GAJC;AAKA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,EAAhD;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAACgB,MAAD,CAApC;;AAEA,QAAMC,eAAe,GAAIC,KAAD,IAAiB;AACvCT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAZ;AACAP,IAAAA,eAAe,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAf;AACAL,IAAAA,SAAS,CAAC,CAAD,CAAT;AACD,GAJD;;AAMA,QAAMM,cAAc,GAAG,MAAY;AACjC,UAAMf,IAAI,GAAG,IAAIgB,QAAJ,EAAb,CADiC,CAEjC;;AACAhB,IAAAA,IAAI,CAACiB,MAAL,CAAY,MAAZ,EAAoBX,YAApB;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,QAAQ,EAAEK;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEI,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA9BD;;GAAMlB,U;;KAAAA,U;AAgCN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\ninterface Props {\n  content: string;\n}\nconst API_BASE = \"http://localhost:5000\";\n\nconst FileLoader: React.FC<Props> = ({ content }): React.ReactElement => {\n\n  axios.post(\"http://localhost:8000/upload\", data, { // receive two parameter endpoint url ,form data \n})\n.then(res => { // then print response status\n  console.log(res.statusText)\n})\n  const [selectedFile, setSelectedFile] = useState();\n  const [loaded, setLoaded] = useState(Number);\n\n  const onChangeHandler = (event): void => {\n    console.log(event.target.files[0]);\n    setSelectedFile(event.target.files[0]);\n    setLoaded(0);\n  };\n\n  const onClickHandler = (): void => {\n    const data = new FormData();\n    // @ts-ignore\n    data.append(\"file\", selectedFile);\n  };\n\n  return (\n    <div className=\"App\">\n      <input type=\"file\" name=\"file\" onChange={onChangeHandler} />\n      <button type=\"button\" onClick={onClickHandler}>\n        Upload\n      </button>\n    </div>\n  );\n};\n\nexport default FileLoader;\n"]},"metadata":{},"sourceType":"module"}