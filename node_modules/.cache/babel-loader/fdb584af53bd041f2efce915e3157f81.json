{"ast":null,"code":"var _jsxFileName = \"/home/tanmoy/Desktop/map/Dtest/src/Components/MainPageContainer/MainPageContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport mapboxgl from \"mapbox-gl\"; // or \"const mapboxgl = require('mapbox-gl');\"\n\nimport FileInput from \"../FileInput/FileInput\";\nimport \"./MainPageContainer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = \"pk.eyJ1IjoidGFubW95bSIsImEiOiJja3N1YTFsem4wa2JhMnFsc3I1M3pmNW9lIn0.xB2fNbAujrVTlCB1yvPkGg\";\n\nconst MainPageContainer = ({\n  content\n}) => {\n  _s();\n\n  const mapContainerRef = useRef(null);\n  const [lng, setLng] = useState(5);\n  const [fileData, setFileData] = useState(\"\");\n  const [lat, setLat] = useState(34);\n  const [zoom, setZoom] = useState(1.5);\n  console.log(\"file\", fileData); // Initialize map when component mounts\n\n  const updateMap = () => {\n    data.forEach(function (d) {\n      test.push(JSON.parse('{\"type\": \"Feature\", \"geometry\": {\"type\": \"Point\", \"coordinates\": [' + d.location.lon + ',' + d.location.lat + ']}}'));\n    });\n  };\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [lng, lat],\n      zoom: zoom\n    }); // Add navigation control (the +/- zoom buttons)\n\n    map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n    console.log(\"file000\", fileData);\n    map.on(\"move\", () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n      map.addSource('countries', {\n        type: 'geojson',\n        data: {\n          \"type\": \"FeatureCollection\",\n          \"features\": [{\n            \"type\": \"Feature\",\n            \"properties\": {},\n            \"geometry\": {\n              \"type\": \"Point\",\n              \"coordinates\": [-76.53063297271729, 39.18174077994108]\n            }\n          }]\n        }\n      });\n      map.addLayer({\n        id: 'countries',\n        \"source\": \"countries\",\n        \"type\": \"circle\",\n        \"paint\": {\n          \"circle-radius\": 10,\n          \"circle-color\": \"#000\"\n        }\n      });\n    }); // Clean up on unmount\n\n    return () => map.remove();\n  }, [fileData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-loader\",\n      children: /*#__PURE__*/_jsxDEV(FileInput, {\n        fileData: fileData,\n        setFileData: setFileData,\n        content: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarStyle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainPageContainer, \"Rdjj65h5Innp+3Fz7aPeBUr/pqg=\");\n\n_c = MainPageContainer;\nexport default MainPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPageContainer\");","map":{"version":3,"sources":["/home/tanmoy/Desktop/map/Dtest/src/Components/MainPageContainer/MainPageContainer.tsx"],"names":["React","useRef","useEffect","useState","mapboxgl","FileInput","accessToken","MainPageContainer","content","mapContainerRef","lng","setLng","fileData","setFileData","lat","setLat","zoom","setZoom","console","log","updateMap","data","forEach","d","test","push","JSON","parse","location","lon","map","Map","container","current","style","center","addControl","NavigationControl","on","getCenter","toFixed","getZoom","addSource","type","addLayer","id","remove"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAO,8BAAP;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAAkC;;AAClC,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,yBAAP;;AAEAD,QAAQ,CAACE,WAAT,GACE,2FADF;;AAOA,MAAMC,iBAAkC,GAAG,CAAC;AAC1CC,EAAAA;AAD0C,CAAD,KAEjB;AAAA;;AACxB,QAAMC,eAAe,GAAGR,MAAM,CAAC,IAAD,CAA9B;AAEA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,CAAD,CAA9B;AAEA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,GAAD,CAAhC;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBP,QAAnB,EARwB,CASxB;;AAEA,QAAMQ,SAAS,GAAG,MAAM;AAEtBC,IAAAA,IAAI,CAACC,OAAL,CAAa,UAASC,CAAT,EAAY;AACrBC,MAAAA,IAAI,CAACC,IAAL,CAAUC,IAAI,CAACC,KAAL,CAAW,uEAAqEJ,CAAC,CAACK,QAAF,CAAWC,GAAhF,GAAoF,GAApF,GAAyFN,CAAC,CAACK,QAAF,CAAWd,GAApG,GAAwG,KAAnH,CAAV;AACH,KAFD;AAGD,GALD;;AAQAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM4B,GAAG,GAAG,IAAI1B,QAAQ,CAAC2B,GAAb,CAAiB;AAC3BC,MAAAA,SAAS,EAAEvB,eAAe,CAACwB,OADA;AAE3BC,MAAAA,KAAK,EAAE,oCAFoB;AAG3BC,MAAAA,MAAM,EAAE,CAACzB,GAAD,EAAMI,GAAN,CAHmB;AAI3BE,MAAAA,IAAI,EAAEA;AAJqB,KAAjB,CAAZ,CADc,CAQd;;AACAc,IAAAA,GAAG,CAACM,UAAJ,CAAe,IAAIhC,QAAQ,CAACiC,iBAAb,EAAf,EAAiD,WAAjD;AAGAnB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBP,QAAtB;AAGAkB,IAAAA,GAAG,CAACQ,EAAJ,CAAO,MAAP,EAAe,MAAM;AACnB3B,MAAAA,MAAM,CAACmB,GAAG,CAACS,SAAJ,GAAgB7B,GAAhB,CAAoB8B,OAApB,CAA4B,CAA5B,CAAD,CAAN;AACAzB,MAAAA,MAAM,CAACe,GAAG,CAACS,SAAJ,GAAgBzB,GAAhB,CAAoB0B,OAApB,CAA4B,CAA5B,CAAD,CAAN;AACAvB,MAAAA,OAAO,CAACa,GAAG,CAACW,OAAJ,GAAcD,OAAd,CAAsB,CAAtB,CAAD,CAAP;AAIEV,MAAAA,GAAG,CAACY,SAAJ,CAAc,WAAd,EAA2B;AACzBC,QAAAA,IAAI,EAAE,SADmB;AAEzBtB,QAAAA,IAAI,EAAE;AACJ,kBAAQ,mBADJ;AAEJ,sBAAY,CAAC;AACb,oBAAQ,SADK;AAEb,0BAAc,EAFD;AAGb,wBAAY;AACZ,sBAAQ,OADI;AAEZ,6BAAe,CACf,CAAC,iBADc,EAEf,iBAFe;AAFH;AAHC,WAAD;AAFR;AAFmB,OAA3B;AAkBJS,MAAAA,GAAG,CAACc,QAAJ,CAAa;AACXC,QAAAA,EAAE,EAAE,WADO;AAEX,kBAAU,WAFC;AAGX,gBAAQ,QAHG;AAIX,iBAAS;AACL,2BAAiB,EADZ;AAEL,0BAAgB;AAFX;AAJE,OAAb;AAUC,KAnCD,EAfc,CAoDd;;AACA,WAAO,MAAMf,GAAG,CAACgB,MAAJ,EAAb;AACD,GAtDQ,EAsDN,CAAClC,QAAD,CAtDM,CAAT,CAnBwB,CAyER;;AAEhB,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAEA,QAArB;AAA+B,QAAA,WAAW,EAAGC,WAA7C;AAA0D,QAAA,OAAO,EAAE;AAAnE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA,kCACcH,GADd,mBACgCI,GADhC,eAC8CE,IAD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eASE;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,GAAG,EAAEP;AAApC;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA1FD;;GAAMF,iB;;KAAAA,iB;AA4FN,eAAeA,iBAAf","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport mapboxgl from \"mapbox-gl\"; // or \"const mapboxgl = require('mapbox-gl');\"\nimport FileInput from \"../FileInput/FileInput\";\nimport \"./MainPageContainer.css\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoidGFubW95bSIsImEiOiJja3N1YTFsem4wa2JhMnFsc3I1M3pmNW9lIn0.xB2fNbAujrVTlCB1yvPkGg\";\n\ninterface Props {\n  content: string;\n}\n\nconst MainPageContainer: React.FC<Props> = ({\n  content,\n}): React.ReactElement => {\n  const mapContainerRef = useRef(null);\n\n  const [lng, setLng] = useState(5);\n\n  const [fileData, setFileData] = useState(\"\");\n  const [lat, setLat] = useState(34);\n  const [zoom, setZoom] = useState(1.5);\n  console.log(\"file\",fileData)\n  // Initialize map when component mounts\n\n  const updateMap = () => {\n   \n    data.forEach(function(d) {\n        test.push(JSON.parse('{\"type\": \"Feature\", \"geometry\": {\"type\": \"Point\", \"coordinates\": ['+d.location.lon+','+ d.location.lat+']}}'));\n    });\n  };\n\n  \n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [lng, lat],\n      zoom: zoom,\n    });\n\n    // Add navigation control (the +/- zoom buttons)\n    map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n\n    \n    console.log(\"file000\",fileData)\n    \n\n    map.on(\"move\", () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n\n      \n\n        map.addSource('countries', {\n          type: 'geojson',\n          data: {\n            \"type\": \"FeatureCollection\",\n            \"features\": [{\n            \"type\": \"Feature\",\n            \"properties\": {},\n            \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": [\n            -76.53063297271729,\n            39.18174077994108\n            ]\n            }\n            }]\n            }\n        });\n  \n    map.addLayer({\n      id: 'countries',\n      \"source\": \"countries\",\n      \"type\": \"circle\",\n      \"paint\": {\n          \"circle-radius\": 10,\n          \"circle-color\": \"#000\"\n      }\n  });\n\n    });\n\n    // Clean up on unmount\n    return () => map.remove();\n  }, [fileData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className=\"root\">\n      <div className=\"file-loader\">\n        <FileInput fileData={fileData} setFileData ={setFileData} content={\"text\"}></FileInput>\n      </div>\n      <div className=\"sidebarStyle\">\n        <div>\n          Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n        </div>\n      </div>\n      <div className=\"map-container\" ref={mapContainerRef} />\n    </div>\n  );\n};\n\nexport default MainPageContainer;\n"]},"metadata":{},"sourceType":"module"}