{"ast":null,"code":"var _jsxFileName = \"/home/tanmoy/Desktop/map/Dtest/src/Components/FileLoader/FileLoader.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:5000\";\n\nconst submitForm = (contentType, data, setResponse) => {\n  axios({\n    url: `${API_BASE}/upload`,\n    method: 'POST',\n    data: data,\n    headers: {\n      'Content-Type': contentType\n    }\n  }).then(response => {\n    setResponse(response.data);\n  }).catch(error => {\n    setResponse(\"error\");\n  });\n};\n\nconst FileLoader = ({\n  content\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FileLoader;\nexport default FileLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileLoader\");","map":{"version":3,"sources":["/home/tanmoy/Desktop/map/Dtest/src/Components/FileLoader/FileLoader.tsx"],"names":["React","API_BASE","submitForm","contentType","data","setResponse","axios","url","method","headers","then","response","catch","error","FileLoader","content"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;;AAIA,MAAMC,QAAQ,GAAG,uBAAjB;;AAEA,MAAMC,UAAU,GAAG,CAACC,WAAD,EAAcC,IAAd,EAAoBC,WAApB,KAA0C;AACzDC,EAAAA,KAAK,CAAC;AACFC,IAAAA,GAAG,EAAG,GAAEN,QAAS,SADf;AAEFO,IAAAA,MAAM,EAAE,MAFN;AAGFJ,IAAAA,IAAI,EAAEA,IAHJ;AAIFK,IAAAA,OAAO,EAAE;AACT,sBAAgBN;AADP;AAJP,GAAD,CAAL,CAOOO,IAPP,CAOaC,QAAD,IAAc;AACtBN,IAAAA,WAAW,CAACM,QAAQ,CAACP,IAAV,CAAX;AACC,GATL,EASOQ,KATP,CAScC,KAAD,IAAW;AACpBR,IAAAA,WAAW,CAAC,OAAD,CAAX;AACC,GAXL;AAYD,CAbH;;AAeA,MAAMS,UAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqC;AAIvE,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAXD;;KAAMD,U;AAaN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\ninterface Props {\n  content: string;\n}\nconst API_BASE = \"http://localhost:5000\"\n\nconst submitForm = (contentType, data, setResponse): void => {\n    axios({\n        url: `${API_BASE}/upload`,\n        method: 'POST',\n        data: data,\n        headers: {\n        'Content-Type': contentType\n        }\n        }).then((response) => {\n        setResponse(response.data);\n        }).catch((error) => {\n        setResponse(\"error\");\n        })\n  };\n\nconst FileLoader: React.FC<Props> = ({ content }): React.ReactElement => {\n\n   \n\n  return (\n    <div>\n\n\n\n    </div>\n  );\n};\n\nexport default FileLoader;\n"]},"metadata":{},"sourceType":"module"}