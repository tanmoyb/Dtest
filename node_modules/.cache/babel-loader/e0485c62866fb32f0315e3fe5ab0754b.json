{"ast":null,"code":"var _jsxFileName = \"/home/tanmoy/Desktop/map/Dtest/src/Components/FileInput/FileInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:5000\";\n\nconst FileLoader = ({\n  content\n}) => {\n  _s();\n\n  const [files, setFiles] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState();\n  const [loaded, setLoaded] = useState(Number);\n\n  const onChangeHandler = event => {\n    console.log(event.target.files[0]);\n    readFile();\n    setSelectedFile(event.target.files[0]);\n    setLoaded(0);\n  };\n\n  const onClickHandler = () => {\n    const data = new FormData(); // @ts-ignore\n\n    data.append(\"file\", selectedFile);\n    axios.post(\"http://localhost:8000/upload\", data, {// receive two parameter endpoint url ,form data\n    }).then(res => {\n      // then print response status\n      console.log(res.statusText);\n    });\n  };\n\n  const readFile = e => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n\n    fileReader.onload = e => {\n      // @ts-ignore\n      console.log(\"e.target.result\", e.target.result); // @ts-ignore\n\n      setFiles(e.target.result);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: onChangeHandler,\n      accept: \".json\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), \"uploaded file content -- \" + files]\n  }, void 0, true);\n};\n\n_s(FileLoader, \"9TaRk9CQ/vagbqez9ovYrFvPg3A=\");\n\n_c = FileLoader;\nexport default FileLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileLoader\");","map":{"version":3,"sources":["/home/tanmoy/Desktop/map/Dtest/src/Components/FileInput/FileInput.tsx"],"names":["React","useState","axios","API_BASE","FileLoader","content","files","setFiles","selectedFile","setSelectedFile","loaded","setLoaded","Number","onChangeHandler","event","console","log","target","readFile","onClickHandler","data","FormData","append","post","then","res","statusText","e","fileReader","FileReader","readAsText","onload","result"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,MAAMC,QAAQ,GAAG,uBAAjB;;AAEA,MAAMC,UAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqC;AAAA;;AAEvE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,EAAhD;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAACW,MAAD,CAApC;;AAEA,QAAMC,eAAe,GAAIC,KAAD,IAAiB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaX,KAAb,CAAmB,CAAnB,CAAZ;AACAY,IAAAA,QAAQ;AACRT,IAAAA,eAAe,CAACK,KAAK,CAACG,MAAN,CAAaX,KAAb,CAAmB,CAAnB,CAAD,CAAf;AACAK,IAAAA,SAAS,CAAC,CAAD,CAAT;AACD,GALD;;AAOA,QAAMQ,cAAc,GAAG,MAAY;AACjC,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb,CADiC,CAEjC;;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBd,YAApB;AACAN,IAAAA,KAAK,CACFqB,IADH,CACQ,8BADR,EACwCH,IADxC,EAC8C,CAC1C;AAD0C,KAD9C,EAIGI,IAJH,CAISC,GAAD,IAAS;AACb;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACC,UAAhB;AACD,KAPH;AAQD,GAZD;;AAeA,QAAMR,QAAQ,GAAIS,CAAD,IAAO;AACtB,UAAMC,UAAU,GAAG,IAAIC,UAAJ,EAAnB;AACAD,IAAAA,UAAU,CAACE,UAAX,CAAsBH,CAAC,CAACV,MAAF,CAASX,KAAT,CAAe,CAAf,CAAtB,EAAyC,OAAzC;;AACAsB,IAAAA,UAAU,CAACG,MAAX,GAAoBJ,CAAC,IAAI;AACvB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BW,CAAC,CAACV,MAAF,CAASe,MAAxC,EAFuB,CAGvB;;AACAzB,MAAAA,QAAQ,CAACoB,CAAC,CAACV,MAAF,CAASe,MAAV,CAAR;AACD,KALD;AAMD,GATD;;AAWA,sBACE;AAAA,4BAEA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEnB,eAA7B;AAA8C,MAAA,MAAM,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA;AAAA;AAAA;AAAA,YAHA,EAIC,8BAA8BP,KAJ/B;AAAA,kBADF;AAOD,CA9CD;;GAAMF,U;;KAAAA,U;AAgDN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\ninterface Props {\n  content: string;\n}\nconst API_BASE = \"http://localhost:5000\";\n\nconst FileLoader: React.FC<Props> = ({ content }): React.ReactElement => {\n\n  const [files, setFiles] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState();\n  const [loaded, setLoaded] = useState(Number);\n\n  const onChangeHandler = (event): void => {\n    console.log(event.target.files[0]);\n    readFile()\n    setSelectedFile(event.target.files[0]);\n    setLoaded(0);\n  };\n\n  const onClickHandler = (): void => {\n    const data = new FormData();\n    // @ts-ignore\n    data.append(\"file\", selectedFile);\n    axios\n      .post(\"http://localhost:8000/upload\", data, {\n        // receive two parameter endpoint url ,form data\n      })\n      .then((res) => {\n        // then print response status\n        console.log(res.statusText);\n      });\n  }; \n\n\n  const readFile = (e) => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n    fileReader.onload = e => {\n      // @ts-ignore\n      console.log(\"e.target.result\", e.target.result);\n      // @ts-ignore\n      setFiles(e.target.result);\n    };\n  };\n\n  return (\n    <>\n \n    <input type=\"file\" onChange={onChangeHandler} accept=\".json\"/>\n    <br />\n    {\"uploaded file content -- \" + files}\n  </>)\n};\n\nexport default FileLoader;\n"]},"metadata":{},"sourceType":"module"}