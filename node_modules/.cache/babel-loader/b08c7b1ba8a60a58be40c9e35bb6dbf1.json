{"ast":null,"code":"var _jsxFileName = \"/home/tanmoy/Desktop/map/Dtest/src/Components/FileInput/FileInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:5000\";\n\nconst FileLoader = ({\n  content\n}) => {\n  _s();\n\n  const [files, setFiles] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState();\n  const [loaded, setLoaded] = useState(Number);\n\n  const onChangeHandler = event => {\n    console.log(event.target.files[0]);\n    readFile(event);\n    setSelectedFile(event.target.files[0]);\n    setLoaded(0);\n    uploadFile();\n  };\n\n  const readFile = e => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n\n    fileReader.onload = e => {\n      // @ts-ignore\n      console.log(\"e.target.result\", e.target.result); // @ts-ignore\n\n      setFiles(e.target.result);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: onChangeHandler,\n      accept: \".json\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onClickHandler,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), \"uploaded file content -- \" + files]\n  }, void 0, true);\n};\n\n_s(FileLoader, \"9TaRk9CQ/vagbqez9ovYrFvPg3A=\");\n\n_c = FileLoader;\nexport default FileLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileLoader\");","map":{"version":3,"sources":["/home/tanmoy/Desktop/map/Dtest/src/Components/FileInput/FileInput.tsx"],"names":["React","useState","API_BASE","FileLoader","content","files","setFiles","selectedFile","setSelectedFile","loaded","setLoaded","Number","onChangeHandler","event","console","log","target","readFile","uploadFile","e","fileReader","FileReader","readAsText","onload","result","onClickHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;;;AAKA,MAAMC,QAAQ,GAAG,uBAAjB;;AAEA,MAAMC,UAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqC;AAAA;;AAEvE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,EAAhD;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACU,MAAD,CAApC;;AAEA,QAAMC,eAAe,GAAIC,KAAD,IAAiB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaX,KAAb,CAAmB,CAAnB,CAAZ;AACAY,IAAAA,QAAQ,CAACJ,KAAD,CAAR;AACAL,IAAAA,eAAe,CAACK,KAAK,CAACG,MAAN,CAAaX,KAAb,CAAmB,CAAnB,CAAD,CAAf;AACAK,IAAAA,SAAS,CAAC,CAAD,CAAT;AACAQ,IAAAA,UAAU;AACX,GAND;;AAUA,QAAMD,QAAQ,GAAIE,CAAD,IAAO;AACtB,UAAMC,UAAU,GAAG,IAAIC,UAAJ,EAAnB;AACAD,IAAAA,UAAU,CAACE,UAAX,CAAsBH,CAAC,CAACH,MAAF,CAASX,KAAT,CAAe,CAAf,CAAtB,EAAyC,OAAzC;;AACAe,IAAAA,UAAU,CAACG,MAAX,GAAoBJ,CAAC,IAAI;AACvB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BI,CAAC,CAACH,MAAF,CAASQ,MAAxC,EAFuB,CAGvB;;AACAlB,MAAAA,QAAQ,CAACa,CAAC,CAACH,MAAF,CAASQ,MAAV,CAAR;AACD,KALD;AAMD,GATD;;AAWA,sBACE;AAAA,4BACA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEZ,eAA7B;AAA8C,MAAA,MAAM,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAuB,MAAA,OAAO,EAAEa,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,EAGC,8BAA8BpB,KAH/B;AAAA,kBADF;AAMD,CAjCD;;GAAMF,U;;KAAAA,U;AAmCN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\ninterface Props {\n  content: string;\n}\nconst API_BASE = \"http://localhost:5000\";\n\nconst FileLoader: React.FC<Props> = ({ content }): React.ReactElement => {\n\n  const [files, setFiles] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState();\n  const [loaded, setLoaded] = useState(Number);\n\n  const onChangeHandler = (event): void => {\n    console.log(event.target.files[0]);\n    readFile(event)\n    setSelectedFile(event.target.files[0]);\n    setLoaded(0);\n    uploadFile()\n  };\n\n  \n\n  const readFile = (e) => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n    fileReader.onload = e => {\n      // @ts-ignore\n      console.log(\"e.target.result\", e.target.result);\n      // @ts-ignore\n      setFiles(e.target.result);\n    };\n  };\n\n  return (\n    <>\n    <input type=\"file\" onChange={onChangeHandler} accept=\".json\"/>\n    <button type=\"button\"  onClick={onClickHandler}>Upload</button>\n    {\"uploaded file content -- \" + files} \n  </>)\n};\n\nexport default FileLoader;\n"]},"metadata":{},"sourceType":"module"}