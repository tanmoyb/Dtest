{"ast":null,"code":"var _jsxFileName = \"/home/tanmoy/Desktop/toast/digia-project/src/Components/UserTable/UserTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Initial_Data = [{\n  'id': 1,\n  'product_name': 'Weetabix',\n  'product_category': 'Cereal',\n  'unit_price': '501'\n}, {\n  'id': 2,\n  'product_name': 'Colgate Toothpaste',\n  'product_category': 'Toiletries',\n  'unit_price': '119'\n}, {\n  'id': 3,\n  'product_name': 'Imperial Leather Soap',\n  'product_category': 'Toiletries',\n  'unit_price': '235'\n}, {\n  'id': 4,\n  'product_name': 'Sunlight Detergent',\n  'product_category': 'Toiletries',\n  'unit_price': '401'\n}];\n\nconst UserTable = ({}) => {\n  _s();\n\n  const [data, setData] = useState(Initial_Data);\n  const [inEditMode, setInEditMode] = useState({\n    status: false,\n    rowKey: null\n  });\n  const [unitPrice, setUnitPrice] = useState('');\n\n  const onEdit = ({\n    id,\n    currentUnitPrice\n  }) => {\n    setInEditMode({\n      status: true,\n      rowKey: id\n    });\n    setUnitPrice(currentUnitPrice);\n  };\n\n  const onSave = ({\n    id,\n    newUnitPrice\n  }) => {\n    // eslint-disable-next-line no-console\n    console.log('new', newUnitPrice);\n  };\n\n  const onCancel = () => {\n    // reset the inEditMode state value\n    setInEditMode({\n      status: false,\n      rowKey: null\n    }); // reset the unit price state value\n\n    setUnitPrice(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simple Inventory Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Unit Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.product_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.product_category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: inEditMode.status && inEditMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              value: unitPrice,\n              onChange: event => setUnitPrice(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 23\n            }, this) : item.unit_price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: inEditMode.status && inEditMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: 'btn-success',\n                onClick: () => onSave({\n                  id: item.id,\n                  newUnitPrice: unitPrice\n                }),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: 'btn-secondary',\n                style: {\n                  marginLeft: 8\n                },\n                onClick: () => onCancel(),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: 'btn-primary',\n              onClick: () => onEdit({\n                id: item.id,\n                currentUnitPrice: item.unit_price\n              }),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserTable, \"nv0GTM48LTkbgarWrLgwG852SP4=\");\n\n_c = UserTable;\nexport default UserTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"sources":["/home/tanmoy/Desktop/toast/digia-project/src/Components/UserTable/UserTable.tsx"],"names":["React","useState","Initial_Data","UserTable","data","setData","inEditMode","setInEditMode","status","rowKey","unitPrice","setUnitPrice","onEdit","id","currentUnitPrice","onSave","newUnitPrice","console","log","onCancel","map","item","product_name","product_category","event","target","value","unit_price","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAMA,MAAMC,YAAY,GAAI,CACpB;AACE,QAAM,CADR;AAEE,kBAAgB,UAFlB;AAGE,sBAAoB,QAHtB;AAIE,gBAAc;AAJhB,CADoB,EAOpB;AACE,QAAM,CADR;AAEE,kBAAgB,oBAFlB;AAGE,sBAAoB,YAHtB;AAIE,gBAAc;AAJhB,CAPoB,EAapB;AACE,QAAM,CADR;AAEE,kBAAgB,uBAFlB;AAGE,sBAAoB,YAHtB;AAIE,gBAAc;AAJhB,CAboB,EAmBpB;AACE,QAAM,CADR;AAEE,kBAAgB,oBAFlB;AAGE,sBAAoB,YAHtB;AAIE,gBAAc;AAJhB,CAnBoB,CAAtB;;AA2BA,MAAMC,SAA0B,GAAG,CAAC,EAAD,KAA4B;AAAA;;AAC7D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAACC,YAAD,CAAhC;AAEA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC;AAC3CO,IAAAA,MAAM,EAAE,KADmC;AAE3CC,IAAAA,MAAM,EAAE;AAFmC,GAAD,CAA5C;AAKA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMW,MAAM,GAAG,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,KAAoC;AACjDP,IAAAA,aAAa,CAAC;AACZC,MAAAA,MAAM,EAAE,IADI;AAEZC,MAAAA,MAAM,EAAEI;AAFI,KAAD,CAAb;AAIAF,IAAAA,YAAY,CAACG,gBAAD,CAAZ;AACD,GAND;;AAQA,QAAMC,MAAM,GAAG,CAAC;AAAEF,IAAAA,EAAF;AAAMG,IAAAA;AAAN,GAAD,KAAgC;AAC7C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,YAAnB;AACD,GAHD;;AAKA,QAAMG,QAAQ,GAAG,MAAY;AAC3B;AACAZ,IAAAA,aAAa,CAAC;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAD,CAAb,CAF2B,CAM3B;;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBAEIP,IAAI,CAACgB,GAAL,CAAUC,IAAD,iBACP;AAAA,kCACE;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAEIjB,UAAU,CAACE,MAAX,IAAqBF,UAAU,CAACG,MAAX,KAAsBY,IAAI,CAACR,EAAhD,gBACE;AAAO,cAAA,KAAK,EAAEH,SAAd;AACE,cAAA,QAAQ,EAAGc,KAAD,IAAWb,YAAY,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd;AADnC;AAAA;AAAA;AAAA;AAAA,oBADF,GAKEL,IAAI,CAACM;AAPX;AAAA;AAAA;AAAA;AAAA,kBAHF,eAcE;AAAA,sBAEIrB,UAAU,CAACE,MAAX,IAAqBF,UAAU,CAACG,MAAX,KAAsBY,IAAI,CAACR,EAAhD,gBACE,QAAC,KAAD,CAAO,QAAP;AAAA,sCACE;AACE,gBAAA,SAAS,EAAE,aADb;AAEE,gBAAA,OAAO,EAAE,MAAYE,MAAM,CAAC;AAAEF,kBAAAA,EAAE,EAAEQ,IAAI,CAACR,EAAX;AAAeG,kBAAAA,YAAY,EAAEN;AAA7B,iBAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAQE;AACE,gBAAA,SAAS,EAAE,eADb;AAEE,gBAAA,KAAK,EAAE;AAAEkB,kBAAAA,UAAU,EAAE;AAAd,iBAFT;AAGE,gBAAA,OAAO,EAAE,MAAYT,QAAQ,EAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,gBAkBE;AACE,cAAA,SAAS,EAAE,aADb;AAEE,cAAA,OAAO,EAAE,MAAYP,MAAM,CAAC;AAAEC,gBAAAA,EAAE,EAAEQ,IAAI,CAACR,EAAX;AAAeC,gBAAAA,gBAAgB,EAAEO,IAAI,CAACM;AAAtC,eAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBN;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA,WAASN,IAAI,CAACR,EAAd;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkED,CAnGD;;GAAMV,S;;KAAAA,S;AAqGN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport UserForm from '../UserForm/UserForm'\n\ninterface Props {\n  content?: string;\n}\nconst Initial_Data =  [\n  {\n    'id': 1,\n    'product_name': 'Weetabix',\n    'product_category': 'Cereal',\n    'unit_price': '501'\n  },\n  {\n    'id': 2,\n    'product_name': 'Colgate Toothpaste',\n    'product_category': 'Toiletries',\n    'unit_price': '119'\n  },\n  {\n    'id': 3,\n    'product_name': 'Imperial Leather Soap',\n    'product_category': 'Toiletries',\n    'unit_price': '235'\n  },\n  {\n    'id': 4,\n    'product_name': 'Sunlight Detergent',\n    'product_category': 'Toiletries',\n    'unit_price': '401'\n  }\n]\n\nconst UserTable: React.FC<Props> = ({}): React.ReactElement => {\n  const [data, setData] = useState(Initial_Data)\n\n  const [inEditMode, setInEditMode] = useState({\n    status: false,\n    rowKey: null\n  })\n\n  const [unitPrice, setUnitPrice] = useState('')\n\n  const onEdit = ({ id, currentUnitPrice }): void => {\n    setInEditMode({\n      status: true,\n      rowKey: id\n    })\n    setUnitPrice(currentUnitPrice)\n  }\n\n  const onSave = ({ id, newUnitPrice }): void => {\n    // eslint-disable-next-line no-console\n    console.log('new', newUnitPrice)\n  }\n\n  const onCancel = (): void => {\n    // reset the inEditMode state value\n    setInEditMode({\n      status: false,\n      rowKey: null\n    })\n    // reset the unit price state value\n    setUnitPrice(null)\n  }\n\n  return (\n    <div className='container'>\n      <h1>Simple Inventory Table</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>Product Name</th>\n            <th>Product Category</th>\n            <th>Unit Price</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            data.map((item) => (\n              <tr key={item.id}>\n                <td>{item.product_name}</td>\n                <td>{item.product_category}</td>\n                <td>\n                  {\n                    inEditMode.status && inEditMode.rowKey === item.id ? (\n                      <input value={unitPrice}\n                        onChange={(event) => setUnitPrice(event.target.value)}\n                      />\n                    ) : (\n                      item.unit_price\n                    )\n                  }\n                </td>\n                <td>\n                  {\n                    inEditMode.status && inEditMode.rowKey === item.id ? (\n                      <React.Fragment>\n                        <button\n                          className={'btn-success'}\n                          onClick={(): void => onSave({ id: item.id, newUnitPrice: unitPrice })}\n                        >\n                                                Save\n                        </button>\n\n                        <button\n                          className={'btn-secondary'}\n                          style={{ marginLeft: 8 }}\n                          onClick={(): void => onCancel()}\n                        >\n                                                Cancel\n                        </button>\n                      </React.Fragment>\n                    ) : (\n                      <button\n                        className={'btn-primary'}\n                        onClick={(): void => onEdit({ id: item.id, currentUnitPrice: item.unit_price })}\n                      >\n                                            Edit\n                      </button>\n                    )\n                  }\n                </td>\n              </tr>\n            ))\n          }\n        </tbody>\n      </table>\n    </div>\n\n  )\n}\n\nexport default UserTable\n"]},"metadata":{},"sourceType":"module"}