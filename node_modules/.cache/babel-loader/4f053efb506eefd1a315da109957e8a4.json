{"ast":null,"code":"var _jsxFileName = \"/home/tanmoy/Desktop/map/Dtest/src/Components/FileLoader/FileLoader.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:5000\";\n\nconst FileLoader = ({\n  content\n}) => {\n  _s();\n\n  const [files, setFiles] = useState(\"\");\n  /*const [selectedFile, setSelectedFile] = useState();\n  const [loaded, setLoaded] = useState(Number);\n   const onChangeHandler = (event): void => {\n    console.log(event.target.files[0]);\n    setSelectedFile(event.target.files[0]);\n    setLoaded(0);\n  };\n   const onClickHandler = (): void => {\n    const data = new FormData();\n    // @ts-ignore\n    data.append(\"file\", selectedFile);\n    axios\n      .post(\"http://localhost:8000/upload\", data, {\n        // receive two parameter endpoint url ,form data\n      })\n      .then((res) => {\n        // then print response status\n        console.log(res.statusText);\n      });\n  }; */\n\n  const handleChange = e => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n\n    fileReader.onload = e => {\n      // @ts-ignore\n      console.log(\"e.target.result\", e.target.result); // @ts-ignore\n\n      setFiles(e.target.result);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), \"uploaded file content -- \" + files]\n  }, void 0, true);\n};\n\n_s(FileLoader, \"o24vquJs73y9PqOcSl0QKqg99pQ=\");\n\n_c = FileLoader;\nexport default FileLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileLoader\");","map":{"version":3,"sources":["/home/tanmoy/Desktop/map/Dtest/src/Components/FileLoader/FileLoader.tsx"],"names":["React","useState","API_BASE","FileLoader","content","files","setFiles","handleChange","e","fileReader","FileReader","readAsText","target","onload","console","log","result"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;;;AAKA,MAAMC,QAAQ,GAAG,uBAAjB;;AAEA,MAAMC,UAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqC;AAAA;;AAEvE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKE,QAAMM,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAMC,UAAU,GAAG,IAAIC,UAAJ,EAAnB;AACAD,IAAAA,UAAU,CAACE,UAAX,CAAsBH,CAAC,CAACI,MAAF,CAASP,KAAT,CAAe,CAAf,CAAtB,EAAyC,OAAzC;;AACAI,IAAAA,UAAU,CAACI,MAAX,GAAoBL,CAAC,IAAI;AACvB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BP,CAAC,CAACI,MAAF,CAASI,MAAxC,EAFuB,CAGvB;;AACAV,MAAAA,QAAQ,CAACE,CAAC,CAACI,MAAF,CAASI,MAAV,CAAR;AACD,KALD;AAMD,GATD;;AAWA,sBACE;AAAA,4BAEA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAET;AAA7B;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA;AAAA;AAAA;AAAA,YAHA,EAIC,8BAA8BF,KAJ/B;AAAA,kBADF;AAOD,CA7CD;;GAAMF,U;;KAAAA,U;AA+CN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\ninterface Props {\n  content: string;\n}\nconst API_BASE = \"http://localhost:5000\";\n\nconst FileLoader: React.FC<Props> = ({ content }): React.ReactElement => {\n\n  const [files, setFiles] = useState(\"\");\n  /*const [selectedFile, setSelectedFile] = useState();\n  const [loaded, setLoaded] = useState(Number);\n\n  const onChangeHandler = (event): void => {\n    console.log(event.target.files[0]);\n    setSelectedFile(event.target.files[0]);\n    setLoaded(0);\n  };\n\n  const onClickHandler = (): void => {\n    const data = new FormData();\n    // @ts-ignore\n    data.append(\"file\", selectedFile);\n    axios\n      .post(\"http://localhost:8000/upload\", data, {\n        // receive two parameter endpoint url ,form data\n      })\n      .then((res) => {\n        // then print response status\n        console.log(res.statusText);\n      });\n  }; */\n\n\n  const handleChange = (e) => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n    fileReader.onload = e => {\n      // @ts-ignore\n      console.log(\"e.target.result\", e.target.result);\n      // @ts-ignore\n      setFiles(e.target.result);\n    };\n  };\n\n  return (\n    <>\n \n    <input type=\"file\" onChange={handleChange} />\n    <br />\n    {\"uploaded file content -- \" + files}\n  </>)\n};\n\nexport default FileLoader;\n"]},"metadata":{},"sourceType":"module"}