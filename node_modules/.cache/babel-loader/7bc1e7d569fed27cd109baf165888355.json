{"ast":null,"code":"var _jsxFileName = \"/home/tanmoy/Desktop/map/Dtest/src/Components/FileLoader/FileLoader.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:5000\";\n\nconst FileLoader = ({\n  content\n}) => {\n  /*const [selectedFile, setSelectedFile] = useState();\n  const [loaded, setLoaded] = useState(Number);\n   const onChangeHandler = (event): void => {\n    console.log(event.target.files[0]);\n    setSelectedFile(event.target.files[0]);\n    setLoaded(0);\n  };\n   const onClickHandler = (): void => {\n    const data = new FormData();\n    // @ts-ignore\n    data.append(\"file\", selectedFile);\n    axios\n      .post(\"http://localhost:8000/upload\", data, {\n        // receive two parameter endpoint url ,form data\n      })\n      .then((res) => {\n        // then print response status\n        console.log(res.statusText);\n      });\n  }; */\n  const handleChange = e => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n\n    fileReader.onload = e => {\n      console.log(\"e.target.result\", e.target.result);\n      setFiles(e.target.result);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: onChangeHandler,\n      accept: \".json\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onClickHandler,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FileLoader;\nexport default FileLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileLoader\");","map":{"version":3,"sources":["/home/tanmoy/Desktop/map/Dtest/src/Components/FileLoader/FileLoader.tsx"],"names":["React","API_BASE","FileLoader","content","handleChange","e","fileReader","FileReader","readAsText","target","files","onload","console","log","result","setFiles","onChangeHandler","onClickHandler"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;;AAKA,MAAMC,QAAQ,GAAG,uBAAjB;;AAEA,MAAMC,UAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqC;AACvE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKE,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAMC,UAAU,GAAG,IAAIC,UAAJ,EAAnB;AACAD,IAAAA,UAAU,CAACE,UAAX,CAAsBH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAtB,EAAyC,OAAzC;;AACAJ,IAAAA,UAAU,CAACK,MAAX,GAAoBN,CAAC,IAAI;AACvBO,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BR,CAAC,CAACI,MAAF,CAASK,MAAxC;AACAC,MAAAA,QAAQ,CAACV,CAAC,CAACI,MAAF,CAASK,MAAV,CAAR;AACD,KAHD;AAID,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,QAAQ,EAAEE,eAAzC;AAA2D,MAAA,MAAM,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA1CD;;KAAMf,U;AA4CN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\ninterface Props {\n  content: string;\n}\nconst API_BASE = \"http://localhost:5000\";\n\nconst FileLoader: React.FC<Props> = ({ content }): React.ReactElement => {\n  /*const [selectedFile, setSelectedFile] = useState();\n  const [loaded, setLoaded] = useState(Number);\n\n  const onChangeHandler = (event): void => {\n    console.log(event.target.files[0]);\n    setSelectedFile(event.target.files[0]);\n    setLoaded(0);\n  };\n\n  const onClickHandler = (): void => {\n    const data = new FormData();\n    // @ts-ignore\n    data.append(\"file\", selectedFile);\n    axios\n      .post(\"http://localhost:8000/upload\", data, {\n        // receive two parameter endpoint url ,form data\n      })\n      .then((res) => {\n        // then print response status\n        console.log(res.statusText);\n      });\n  }; */\n\n\n  const handleChange = (e) => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n    fileReader.onload = e => {\n      console.log(\"e.target.result\", e.target.result);\n      setFiles(e.target.result);\n    };\n  };\n\n  return (\n    <div className=\"App\">\n      <input type=\"file\" name=\"file\" onChange={onChangeHandler}  accept='.json' />\n      <button type=\"button\" onClick={onClickHandler}>\n        Upload\n      </button>\n    </div>\n  );\n};\n\nexport default FileLoader;\n"]},"metadata":{},"sourceType":"module"}