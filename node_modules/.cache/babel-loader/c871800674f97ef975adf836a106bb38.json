{"ast":null,"code":"var _jsxFileName = \"/home/tanmoy/Desktop/map/Dtest/src/Components/MainPageContainer/MainPageContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport mapboxgl from \"mapbox-gl\"; // or \"const mapboxgl = require('mapbox-gl');\"\n\nimport FileInput from \"../FileInput/FileInput\";\nimport \"./MainPageContainer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = \"pk.eyJ1IjoidGFubW95bSIsImEiOiJja3N1YTFsem4wa2JhMnFsc3I1M3pmNW9lIn0.xB2fNbAujrVTlCB1yvPkGg\";\n\nconst MainPageContainer = ({\n  content\n}) => {\n  _s();\n\n  const mapContainerRef = useRef(null);\n  const [lng, setLng] = useState(5);\n  onst[(fileData, setFileData)] = useState(\"\");\n  const [lat, setLat] = useState(34);\n  const [zoom, setZoom] = useState(1.5); // Initialize map when component mounts\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [lng, lat],\n      zoom: zoom\n    }); // Add navigation control (the +/- zoom buttons)\n\n    map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n    map.addSource('countries', {\n      type: 'geojson'\n    });\n    map.on(\"move\", () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    }); // Clean up on unmount\n\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-loader\",\n      children: /*#__PURE__*/_jsxDEV(FileInput, {\n        content: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarStyle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainPageContainer, \"ILahU6lsU/oW1Q/z2Qnrpxo98FM=\");\n\n_c = MainPageContainer;\nexport default MainPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPageContainer\");","map":{"version":3,"sources":["/home/tanmoy/Desktop/map/Dtest/src/Components/MainPageContainer/MainPageContainer.tsx"],"names":["React","useRef","useEffect","useState","mapboxgl","FileInput","accessToken","MainPageContainer","content","mapContainerRef","lng","setLng","onst","fileData","setFileData","lat","setLat","zoom","setZoom","map","Map","container","current","style","center","addControl","NavigationControl","addSource","type","on","getCenter","toFixed","getZoom","remove"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAO,8BAAP;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAAkC;;AAClC,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,yBAAP;;AAEAD,QAAQ,CAACE,WAAT,GACE,2FADF;;AAOA,MAAMC,iBAAkC,GAAG,CAAC;AAC1CC,EAAAA;AAD0C,CAAD,KAEjB;AAAA;;AACxB,QAAMC,eAAe,GAAGR,MAAM,CAAC,IAAD,CAA9B;AAEA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,CAAD,CAA9B;AAEAS,EAAAA,IAAI,EAAEC,QAAQ,EAAEC,WAAZ,EAAJ,GAA+BX,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,GAAD,CAAhC,CAPwB,CASxB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,GAAG,GAAG,IAAIf,QAAQ,CAACgB,GAAb,CAAiB;AAC3BC,MAAAA,SAAS,EAAEZ,eAAe,CAACa,OADA;AAE3BC,MAAAA,KAAK,EAAE,oCAFoB;AAG3BC,MAAAA,MAAM,EAAE,CAACd,GAAD,EAAMK,GAAN,CAHmB;AAI3BE,MAAAA,IAAI,EAAEA;AAJqB,KAAjB,CAAZ,CADc,CAQd;;AACAE,IAAAA,GAAG,CAACM,UAAJ,CAAe,IAAIrB,QAAQ,CAACsB,iBAAb,EAAf,EAAiD,WAAjD;AAEAP,IAAAA,GAAG,CAACQ,SAAJ,CAAc,WAAd,EAA2B;AACzBC,MAAAA,IAAI,EAAE;AADmB,KAA3B;AAKAT,IAAAA,GAAG,CAACU,EAAJ,CAAO,MAAP,EAAe,MAAM;AACnBlB,MAAAA,MAAM,CAACQ,GAAG,CAACW,SAAJ,GAAgBpB,GAAhB,CAAoBqB,OAApB,CAA4B,CAA5B,CAAD,CAAN;AACAf,MAAAA,MAAM,CAACG,GAAG,CAACW,SAAJ,GAAgBf,GAAhB,CAAoBgB,OAApB,CAA4B,CAA5B,CAAD,CAAN;AACAb,MAAAA,OAAO,CAACC,GAAG,CAACa,OAAJ,GAAcD,OAAd,CAAsB,CAAtB,CAAD,CAAP;AACD,KAJD,EAhBc,CAsBd;;AACA,WAAO,MAAMZ,GAAG,CAACc,MAAJ,EAAb;AACD,GAxBQ,EAwBN,EAxBM,CAAT,CAVwB,CAkChB;;AAER,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA,kCACcvB,GADd,mBACgCK,GADhC,eAC8CE,IAD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eASE;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,GAAG,EAAER;AAApC;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAnDD;;GAAMF,iB;;KAAAA,iB;AAqDN,eAAeA,iBAAf","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport mapboxgl from \"mapbox-gl\"; // or \"const mapboxgl = require('mapbox-gl');\"\nimport FileInput from \"../FileInput/FileInput\";\nimport \"./MainPageContainer.css\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoidGFubW95bSIsImEiOiJja3N1YTFsem4wa2JhMnFsc3I1M3pmNW9lIn0.xB2fNbAujrVTlCB1yvPkGg\";\n\ninterface Props {\n  content: string;\n}\n\nconst MainPageContainer: React.FC<Props> = ({\n  content,\n}): React.ReactElement => {\n  const mapContainerRef = useRef(null);\n\n  const [lng, setLng] = useState(5);\n\n  onst [fileData, setFileData] = useState(\"\");\n  const [lat, setLat] = useState(34);\n  const [zoom, setZoom] = useState(1.5);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [lng, lat],\n      zoom: zoom,\n    });\n\n    // Add navigation control (the +/- zoom buttons)\n    map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n\n    map.addSource('countries', {\n      type: 'geojson',\n      \n    });\n\n    map.on(\"move\", () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    });\n\n    // Clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className=\"root\">\n      <div className=\"file-loader\">\n        <FileInput content={\"text\"}></FileInput>\n      </div>\n      <div className=\"sidebarStyle\">\n        <div>\n          Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n        </div>\n      </div>\n      <div className=\"map-container\" ref={mapContainerRef} />\n    </div>\n  );\n};\n\nexport default MainPageContainer;\n"]},"metadata":{},"sourceType":"module"}