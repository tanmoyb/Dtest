{"ast":null,"code":"var _jsxFileName = \"/home/tanmoy/Desktop/toast/digia-project/src/Components/UserTable/UserTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Initial_Data = [{\n  'id': 1,\n  'product_name': 'Weetabix',\n  'product_category': 'Cereal',\n  'unit_price': '501'\n}, {\n  'id': 2,\n  'product_name': 'Colgate Toothpaste',\n  'product_category': 'Toiletries',\n  'unit_price': '119'\n}, {\n  'id': 3,\n  'product_name': 'Imperial Leather Soap',\n  'product_category': 'Toiletries',\n  'unit_price': '235'\n}, {\n  'id': 4,\n  'product_name': 'Sunlight Detergent',\n  'product_category': 'Toiletries',\n  'unit_price': '401'\n}];\n\nconst UserTable = ({}) => {\n  _s();\n\n  const [data, setData] = useState(Initial_Data);\n  const [inEditMode, setInEditMode] = useState({\n    status: false,\n    rowKey: null\n  });\n  const [unitPrice, setUnitPrice] = useState(strin);\n\n  const onEdit = ({\n    id,\n    currentUnitPrice\n  }) => {\n    setInEditMode({\n      status: true,\n      rowKey: id\n    });\n    setUnitPrice(currentUnitPrice);\n  };\n\n  const onSave = ({\n    id,\n    newUnitPrice\n  }) => {\n    // eslint-disable-next-line no-console\n    console.log(\"new\", newUnitPrice);\n  };\n\n  const onCancel = () => {\n    // reset the inEditMode state value\n    setInEditMode({\n      status: false,\n      rowKey: null\n    }); // reset the unit price state value\n\n    setUnitPrice(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simple Inventory Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Unit Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.product_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.product_category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: inEditMode.status && inEditMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              value: unitPrice,\n              onChange: event => setUnitPrice(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 41\n            }, this) : item.unit_price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: inEditMode.status && inEditMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-success\",\n                onClick: () => onSave({\n                  id: item.id,\n                  newUnitPrice: unitPrice\n                }),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-secondary\",\n                style: {\n                  marginLeft: 8\n                },\n                onClick: () => onCancel(),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-primary\",\n              onClick: () => onEdit({\n                id: item.id,\n                currentUnitPrice: item.unit_price\n              }),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserTable, \"sdxa5hPcvx9az2pgH8kjDo1fM7E=\");\n\n_c = UserTable;\nexport default UserTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"sources":["/home/tanmoy/Desktop/toast/digia-project/src/Components/UserTable/UserTable.tsx"],"names":["React","useState","Initial_Data","UserTable","data","setData","inEditMode","setInEditMode","status","rowKey","unitPrice","setUnitPrice","strin","onEdit","id","currentUnitPrice","onSave","newUnitPrice","console","log","onCancel","map","item","product_name","product_category","event","target","value","unit_price","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport UserForm from '../UserForm/UserForm'\n\ninterface Props {\n  content?: string;\n}\nconst Initial_Data =  [\n  {\n    'id': 1,\n    'product_name': 'Weetabix',\n    'product_category': 'Cereal',\n    'unit_price': '501'\n  },\n  {\n    'id': 2,\n    'product_name': 'Colgate Toothpaste',\n    'product_category': 'Toiletries',\n    'unit_price': '119'\n  },\n  {\n    'id': 3,\n    'product_name': 'Imperial Leather Soap',\n    'product_category': 'Toiletries',\n    'unit_price': '235'\n  },\n  {\n    'id': 4,\n    'product_name': 'Sunlight Detergent',\n    'product_category': 'Toiletries',\n    'unit_price': '401'\n  }\n]\n\nconst UserTable: React.FC<Props> = ({}): React.ReactElement => {\n  const [data, setData] = useState(Initial_Data)\n\n  const [inEditMode, setInEditMode] = useState({\n    status: false,\n    rowKey: null\n});\n\nconst [unitPrice, setUnitPrice] = useState(strin)\n\n   const onEdit = ({id, currentUnitPrice}) => {\n    setInEditMode({\n        status: true,\n        rowKey: id\n    })\n    setUnitPrice(currentUnitPrice);\n}\n\nconst onSave = ({id, newUnitPrice}) => {\n   // eslint-disable-next-line no-console\n   console.log(\"new\",newUnitPrice)\n}\n\nconst onCancel = () => {\n    // reset the inEditMode state value\n    setInEditMode({\n        status: false,\n        rowKey: null\n    })\n    // reset the unit price state value\n    setUnitPrice(null);\n}\n\n  return (\n    <div className=\"container\">\n            <h1>Simple Inventory Table</h1>\n            <table>\n                <thead>\n                <tr>\n                    <th>Product Name</th>\n                    <th>Product Category</th>\n                    <th>Unit Price</th>\n                    <th>Action</th>\n                </tr>\n                </thead>\n                <tbody>\n                {\n                    data.map((item) => (\n                        <tr key={item.id}>\n                            <td>{item.product_name}</td>\n                            <td>{item.product_category}</td>\n                            <td>\n                                {\n                                    inEditMode.status && inEditMode.rowKey === item.id ? (\n                                        <input value={unitPrice}\n                                               onChange={(event) => setUnitPrice(event.target.value)}\n                                        />\n                                    ) : (\n                                        item.unit_price\n                                    )\n                                }\n                            </td>\n                            <td>\n                                {\n                                    inEditMode.status && inEditMode.rowKey === item.id ? (\n                                        <React.Fragment>\n                                            <button\n                                                className={\"btn-success\"}\n                                                onClick={() => onSave({id: item.id, newUnitPrice: unitPrice})}\n                                            >\n                                                Save\n                                            </button>\n\n                                            <button\n                                                className={\"btn-secondary\"}\n                                                style={{marginLeft: 8}}\n                                                onClick={() => onCancel()}\n                                            >\n                                                Cancel\n                                            </button>\n                                        </React.Fragment>\n                                    ) : (\n                                        <button\n                                            className={\"btn-primary\"}\n                                            onClick={() => onEdit({id: item.id, currentUnitPrice: item.unit_price})}\n                                        >\n                                            Edit\n                                        </button>\n                                    )\n                                }\n                            </td>\n                        </tr>\n                    ))\n                }\n                </tbody>\n            </table>\n        </div>\n    \n\n  )\n}\n\nexport default UserTable\n"]},"metadata":{},"sourceType":"module"}