{"ast":null,"code":"var _jsxFileName = \"/home/tanmoy/Desktop/toast/digia-project/src/Components/UserForm/UserForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst regExp = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\nconst API_HOST = 'http://localhost:4000';\nconst INVENTORY_API_URL = `${API_HOST}/inventory`;\n\nconst UserForm = ({}) => {\n  _s();\n\n  const INITIAL_STATE = {\n    name: '',\n    email: '',\n    phoneNumer: ''\n  };\n  const [isError, setIsError] = useState(INITIAL_STATE);\n  const [inputValue, setInputValue] = useState({});\n  const [valid, setValid] = useState(true);\n\n  const formValid = () => {\n    Object.values(isError).forEach(val => {\n      if (val.length > 0) {\n        setValid(false);\n      } else {\n        setValid(true);\n      }\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    formValid();\n\n    if (valid) {\n      // eslint-disable-next-line no-console\n      console.log('value', inputValue);\n      updateInventory(inputValue);\n    } else {\n      // eslint-disable-next-line no-console\n      console.log('Form is invalid!');\n    }\n  };\n\n  const formValChange = e => {\n    e.preventDefault();\n    const {\n      name,\n      value\n    } = e.target;\n\n    switch (name) {\n      case 'name':\n        const nameError = value.length < 4 ? 'Atleast 4 characaters required' : '';\n        setIsError({ ...isError,\n          name: nameError\n        });\n        break;\n\n      case 'email':\n        const emailError = regExp.test(value) ? '' : 'Email address is invalid';\n        setIsError({ ...isError,\n          email: emailError\n        });\n        break;\n\n      case 'phoneNumer':\n        const phoneNumerError = value.length < 6 ? 'Atleast 6 characaters required' : '';\n        setIsError({ ...isError,\n          phoneNumer: phoneNumerError\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    setInputValue({ ...inputValue,\n      [name]: value\n    });\n  }; // eslint-disable-next-line no-console\n\n\n  console.log('inputValue', inputValue);\n\n  const updateInventory = value => {\n    // eslint-disable-next-line no-console\n    console.log('unit price', value);\n    fetch(`${INVENTORY_API_URL}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        name: value.name,\n        email\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: isError.name.length > 0 ? 'is-invalid form-control' : 'form-control',\n          name: \"name\",\n          onChange: formValChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), isError.name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"invalid-feedback\",\n          children: isError.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: isError.email.length > 0 ? 'is-invalid form-control' : 'form-control',\n          name: \"email\",\n          onChange: formValChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), isError.email.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"invalid-feedback\",\n          children: isError.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"phoneNumber\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: isError.phoneNumer.length > 0 ? 'is-invalid form-control' : 'form-control',\n          name: \"phoneNumber\",\n          onChange: formValChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), isError.phoneNumer.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"invalid-feedback\",\n          children: isError.phoneNumer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-block btn-danger\",\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserForm, \"zn8+7mvXCq3Rn4MjAxNH2FgwYM0=\");\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["/home/tanmoy/Desktop/toast/digia-project/src/Components/UserForm/UserForm.tsx"],"names":["React","useState","regExp","RegExp","API_HOST","INVENTORY_API_URL","UserForm","INITIAL_STATE","name","email","phoneNumer","isError","setIsError","inputValue","setInputValue","valid","setValid","formValid","Object","values","forEach","val","length","onSubmit","e","preventDefault","console","log","updateInventory","formValChange","value","target","nameError","emailError","test","phoneNumerError","fetch","method","body","JSON","stringify","headers"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAMA,MAAMC,MAAM,GAAGC,MAAM,CAAC,wCAAD,CAArB;AACA,MAAMC,QAAQ,GAAG,uBAAjB;AACA,MAAMC,iBAAiB,GAAI,GAAED,QAAS,YAAtC;;AAEA,MAAME,QAAyB,GAAG,CAAC,EAAD,KAA4B;AAAA;;AAC5D,QAAMC,aAAa,GAAG;AACpBC,IAAAA,IAAI,EAAE,EADc;AAEpBC,IAAAA,KAAK,EAAE,EAFa;AAGpBC,IAAAA,UAAU,EAAE;AAHQ,GAAtB;AAKA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAACM,aAAD,CAAtC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMgB,SAAS,GAAG,MAAY;AAC5BC,IAAAA,MAAM,CAACC,MAAP,CAAcR,OAAd,EAAuBS,OAAvB,CAAgCC,GAAD,IAAS;AACtC,UAAIA,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClBN,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,OAFD,MAEO;AACLA,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,KAND;AAOD,GARD;;AAUA,QAAMO,QAAQ,GAAIC,CAAD,IAAkB;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,SAAS;;AACT,QAAIF,KAAJ,EAAW;AACT;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBd,UAArB;AACAe,MAAAA,eAAe,CAACf,UAAD,CAAf;AACD,KAJD,MAIO;AACL;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;AACF,GAXD;;AAaA,QAAME,aAAa,GAAIL,CAAD,IAAkB;AACtCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM;AAAEjB,MAAAA,IAAF;AAAQsB,MAAAA;AAAR,QAAkBN,CAAC,CAACO,MAA1B;;AAEA,YAAQvB,IAAR;AACE,WAAK,MAAL;AACE,cAAMwB,SAAS,GACbF,KAAK,CAACR,MAAN,GAAe,CAAf,GAAmB,gCAAnB,GAAsD,EADxD;AAEAV,QAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAETH,UAAAA,IAAI,EAAEwB;AAFG,SAAD,CAAV;AAIA;;AACF,WAAK,OAAL;AACE,cAAMC,UAAU,GAAG/B,MAAM,CAACgC,IAAP,CAAYJ,KAAZ,IAAqB,EAArB,GAA0B,0BAA7C;AACAlB,QAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAETF,UAAAA,KAAK,EAAEwB;AAFE,SAAD,CAAV;AAIA;;AACF,WAAK,YAAL;AACE,cAAME,eAAe,GACnBL,KAAK,CAACR,MAAN,GAAe,CAAf,GAAmB,gCAAnB,GAAsD,EADxD;AAEAV,QAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAETD,UAAAA,UAAU,EAAEyB;AAFH,SAAD,CAAV;AAIA;;AACF;AACE;AAzBJ;;AA2BArB,IAAAA,aAAa,CAAC,EACZ,GAAGD,UADS;AAEZ,OAACL,IAAD,GAAQsB;AAFI,KAAD,CAAb;AAID,GAnCD,CAlC4D,CAsE5D;;;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bd,UAA1B;;AAEA,QAAMe,eAAe,GAAIE,KAAD,IAAiB;AACvC;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BG,KAA1B;AACAM,IAAAA,KAAK,CAAE,GAAE/B,iBAAkB,EAAtB,EAAyB;AAC5BgC,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBhC,QAAAA,IAAI,EAACsB,KAAK,CAACtB,IADQ;AAEnBC,QAAAA;AAFmB,OAAf,CAFsB;AAM5BgC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AANmB,KAAzB,CAAL;AAUD,GAbD;;AAeA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAElB,QAAhB;AAA0B,MAAA,UAAU,MAApC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EACPZ,OAAO,CAACH,IAAR,CAAac,MAAb,GAAsB,CAAtB,GACI,yBADJ,GAEI,cALR;AAOE,UAAA,IAAI,EAAC,MAPP;AAQE,UAAA,QAAQ,EAAEO;AARZ;AAAA;AAAA;AAAA;AAAA,gBAFF,EAYGlB,OAAO,CAACH,IAAR,CAAac,MAAb,GAAsB,CAAtB,iBACC;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA,oBAAoCX,OAAO,CAACH;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAkBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,SAAS,EACPG,OAAO,CAACF,KAAR,CAAca,MAAd,GAAuB,CAAvB,GACI,yBADJ,GAEI,cALR;AAOE,UAAA,IAAI,EAAC,OAPP;AAQE,UAAA,QAAQ,EAAEO;AARZ;AAAA;AAAA;AAAA;AAAA,gBAFF,EAYGlB,OAAO,CAACF,KAAR,CAAca,MAAd,GAAuB,CAAvB,iBACC;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA,oBAAoCX,OAAO,CAACF;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmCE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EACPE,OAAO,CAACD,UAAR,CAAmBY,MAAnB,GAA4B,CAA5B,GACI,yBADJ,GAEI,cALR;AAOE,UAAA,IAAI,EAAC,aAPP;AAQE,UAAA,QAAQ,EAAEO;AARZ;AAAA;AAAA;AAAA;AAAA,gBAFF,EAYGlB,OAAO,CAACD,UAAR,CAAmBY,MAAnB,GAA4B,CAA5B,iBACC;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA,oBAAoCX,OAAO,CAACD;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCF,eAoDE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,0BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA4DD,CApJD;;GAAMJ,Q;;KAAAA,Q;AAsJN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\n\ninterface Props {\n  content?: string;\n}\n\nconst regExp = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/)\nconst API_HOST = 'http://localhost:4000'\nconst INVENTORY_API_URL = `${API_HOST}/inventory`\n\nconst UserForm: React.FC<Props> = ({}): React.ReactElement => {\n  const INITIAL_STATE = {\n    name: '',\n    email: '',\n    phoneNumer: ''\n  }\n  const [isError, setIsError] = useState(INITIAL_STATE)\n  const [inputValue, setInputValue] = useState({})\n\n  const [valid, setValid] = useState(true)\n\n  const formValid = (): void => {\n    Object.values(isError).forEach((val) => {\n      if (val.length > 0) {\n        setValid(false)\n      } else {\n        setValid(true)\n      }\n    })\n  }\n\n  const onSubmit = (e: any): void => {\n    e.preventDefault()\n    formValid()\n    if (valid) {\n      // eslint-disable-next-line no-console\n      console.log('value', inputValue)\n      updateInventory(inputValue)\n    } else {\n      // eslint-disable-next-line no-console\n      console.log('Form is invalid!')\n    }\n  }\n\n  const formValChange = (e: any): void => {\n    e.preventDefault()\n    const { name, value } = e.target\n\n    switch (name) {\n      case 'name':\n        const nameError =\n          value.length < 4 ? 'Atleast 4 characaters required' : ''\n        setIsError({\n          ...isError,\n          name: nameError\n        })\n        break\n      case 'email':\n        const emailError = regExp.test(value) ? '' : 'Email address is invalid'\n        setIsError({\n          ...isError,\n          email: emailError\n        })\n        break\n      case 'phoneNumer':\n        const phoneNumerError =\n          value.length < 6 ? 'Atleast 6 characaters required' : ''\n        setIsError({\n          ...isError,\n          phoneNumer: phoneNumerError\n        })\n        break\n      default:\n        break\n    }\n    setInputValue({\n      ...inputValue,\n      [name]: value\n    })\n  }\n  // eslint-disable-next-line no-console\n  console.log('inputValue', inputValue)\n\n  const updateInventory = (value): void => {\n    // eslint-disable-next-line no-console\n    console.log('unit price', value)\n    fetch(`${INVENTORY_API_URL}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        name:value.name,\n        email\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    })\n  }\n\n  return (\n    <>\n      <form onSubmit={onSubmit} noValidate>\n        <div className='form-group'>\n          <label>Name</label>\n          <input\n            type='text'\n            className={\n              isError.name.length > 0\n                ? 'is-invalid form-control'\n                : 'form-control'\n            }\n            name='name'\n            onChange={formValChange}\n          />\n          {isError.name.length > 0 && (\n            <span className='invalid-feedback'>{isError.name}</span>\n          )}\n        </div>\n\n        <div className='form-group'>\n          <label>Email</label>\n          <input\n            type='email'\n            className={\n              isError.email.length > 0\n                ? 'is-invalid form-control'\n                : 'form-control'\n            }\n            name='email'\n            onChange={formValChange}\n          />\n          {isError.email.length > 0 && (\n            <span className='invalid-feedback'>{isError.email}</span>\n          )}\n        </div>\n\n        <div className='form-group'>\n          <label>phoneNumber</label>\n          <input\n            type='text'\n            className={\n              isError.phoneNumer.length > 0\n                ? 'is-invalid form-control'\n                : 'form-control'\n            }\n            name='phoneNumber'\n            onChange={formValChange}\n          />\n          {isError.phoneNumer.length > 0 && (\n            <span className='invalid-feedback'>{isError.phoneNumer}</span>\n          )}\n        </div>\n\n        <button type='submit' className='btn btn-block btn-danger'>\n          Create User\n        </button>\n      </form>\n    </>\n  )\n}\n\nexport default UserForm\n"]},"metadata":{},"sourceType":"module"}