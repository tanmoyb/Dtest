{"ast":null,"code":"var _jsxFileName = \"/home/tanmoy/Desktop/map/Dtest/src/Components/MainPageContainer/MainPageContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport mapboxgl from \"mapbox-gl\"; // or \"const mapboxgl = require('mapbox-gl');\"\n\nimport FileInput from \"../FileInput/FileInput\";\nimport \"./MainPageContainer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = \"pk.eyJ1IjoidGFubW95bSIsImEiOiJja3N1YTFsem4wa2JhMnFsc3I1M3pmNW9lIn0.xB2fNbAujrVTlCB1yvPkGg\";\n\nconst MainPageContainer = ({\n  content\n}) => {\n  _s();\n\n  const mapContainerRef = useRef(null);\n  const [lng, setLng] = useState(5);\n  const [fileData, setFileData] = useState(\"\");\n  const [lat, setLat] = useState(34);\n  const [zoom, setZoom] = useState(1.5);\n  console.log(\"file\", fileData); // Initialize map when component mounts\n\n  var test = [];\n  const data = {\n    location: {\n      lat: 50.62914,\n      lon: 5.61972\n    }\n  };\n\n  const updateMap = d => {\n    // @ts-ignore\n    data.forEach(function (d) {\n      return {\n        type: \"Point\",\n        coordinates: [d.location.lon, d.location.lat]\n      };\n    });\n  };\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [lng, lat],\n      zoom: zoom\n    }); // Add navigation control (the +/- zoom buttons)\n\n    map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n    console.log(\"file000\", fileData);\n    map.on(\"load\", () => {\n      // Add an image to use as a custom marker\n      map.loadImage(\"https://docs.mapbox.com/mapbox-gl-js/assets/custom_marker.png\", (error, image) => {\n        if (error) throw error;\n        map.addImage(\"custom-marker\", image); // Add a GeoJSON source with 2 points\n\n        map.addSource(\"points\", {\n          type: \"geojson\",\n          data: {\n            type: \"FeatureCollection\",\n            features: [{\n              // feature for Mapbox DC\n              type: \"Feature\",\n              geometry: {\n                type: \"Point\",\n                coordinates: [-77.03238901390978, 38.913188059745586]\n              },\n              properties: {\n                title: \"Mapbox DC\"\n              }\n            }, {\n              // feature for Mapbox SF\n              type: \"Feature\",\n              geometry: {\n                type: \"Point\",\n                coordinates: [-122.414, 37.776]\n              },\n              properties: {\n                title: \"Mapbox SF\"\n              }\n            }]\n          }\n        }); // Add a symbol layer\n\n        map.addLayer({\n          id: \"points\",\n          type: \"symbol\",\n          source: \"points\",\n          layout: {\n            \"icon-image\": \"custom-marker\",\n            // get the title name from the source's \"title\" property\n            \"text-field\": [\"get\", \"title\"],\n            \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"],\n            \"text-offset\": [0, 1.25],\n            \"text-anchor\": \"top\"\n          }\n        });\n      });\n    }); // Clean up on unmount\n\n    return () => map.remove();\n  }, [fileData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-loader\",\n      children: /*#__PURE__*/_jsxDEV(FileInput, {\n        fileData: fileData,\n        setFileData: setFileData,\n        content: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarStyle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainPageContainer, \"Rdjj65h5Innp+3Fz7aPeBUr/pqg=\");\n\n_c = MainPageContainer;\nexport default MainPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPageContainer\");","map":{"version":3,"sources":["/home/tanmoy/Desktop/map/Dtest/src/Components/MainPageContainer/MainPageContainer.tsx"],"names":["React","useRef","useEffect","useState","mapboxgl","FileInput","accessToken","MainPageContainer","content","mapContainerRef","lng","setLng","fileData","setFileData","lat","setLat","zoom","setZoom","console","log","test","data","location","lon","updateMap","d","forEach","type","coordinates","map","Map","container","current","style","center","addControl","NavigationControl","on","loadImage","error","image","addImage","addSource","features","geometry","properties","title","addLayer","id","source","layout","remove"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport mapboxgl from \"mapbox-gl\"; // or \"const mapboxgl = require('mapbox-gl');\"\nimport FileInput from \"../FileInput/FileInput\";\nimport \"./MainPageContainer.css\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoidGFubW95bSIsImEiOiJja3N1YTFsem4wa2JhMnFsc3I1M3pmNW9lIn0.xB2fNbAujrVTlCB1yvPkGg\";\n\ninterface Props {\n  content: string;\n}\n\nconst MainPageContainer: React.FC<Props> = ({\n  content,\n}): React.ReactElement => {\n  const mapContainerRef = useRef(null);\n\n  const [lng, setLng] = useState(5);\n\n  const [fileData, setFileData] = useState(\"\");\n  const [lat, setLat] = useState(34);\n  const [zoom, setZoom] = useState(1.5);\n  console.log(\"file\", fileData);\n  // Initialize map when component mounts\n  var test = [];\n\n  const data = { location: { lat: 50.62914, lon: 5.61972 } };\n  const updateMap = (d) => {\n    // @ts-ignore\n    data.forEach(function (d) {\n      return {\n        type: \"Point\",\n        coordinates: [d.location.lon, d.location.lat],\n      };\n    });\n  };\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [lng, lat],\n      zoom: zoom,\n    });\n\n    // Add navigation control (the +/- zoom buttons)\n    map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n\n    console.log(\"file000\", fileData);\n\n    map.on(\"load\", () => {\n      // Add an image to use as a custom marker\n      map.loadImage(\n        \"https://docs.mapbox.com/mapbox-gl-js/assets/custom_marker.png\",\n        (error, image) => {\n          if (error) throw error;\n          map.addImage(\"custom-marker\", image);\n          // Add a GeoJSON source with 2 points\n          map.addSource(\"points\", {\n            type: \"geojson\",\n            data: {\n              type: \"FeatureCollection\",\n              features: [\n                {\n                  // feature for Mapbox DC\n                  type: \"Feature\",\n                  geometry: {\n                    type: \"Point\",\n                    coordinates: [-77.03238901390978, 38.913188059745586],\n                  },\n                  properties: {\n                    title: \"Mapbox DC\",\n                  },\n                },\n                {\n                  // feature for Mapbox SF\n                  type: \"Feature\",\n                  geometry: {\n                    type: \"Point\",\n                    coordinates: [-122.414, 37.776],\n                  },\n                  properties: {\n                    title: \"Mapbox SF\",\n                  },\n                },\n              ],\n            },\n          });\n\n          // Add a symbol layer\n          map.addLayer({\n            id: \"points\",\n            type: \"symbol\",\n            source: \"points\",\n            layout: {\n              \"icon-image\": \"custom-marker\",\n              // get the title name from the source's \"title\" property\n              \"text-field\": [\"get\", \"title\"],\n              \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"],\n              \"text-offset\": [0, 1.25],\n              \"text-anchor\": \"top\",\n            },\n          });\n        }\n      );\n    });\n\n    // Clean up on unmount\n    return () => map.remove();\n  }, [fileData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className=\"root\">\n      <div className=\"file-loader\">\n        <FileInput\n          fileData={fileData}\n          setFileData={setFileData}\n          content={\"text\"}\n        ></FileInput>\n      </div>\n      <div className=\"sidebarStyle\">\n        <div>\n          Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n        </div>\n      </div>\n      <div className=\"map-container\" ref={mapContainerRef} />\n    </div>\n  );\n};\n\nexport default MainPageContainer;\n"]},"metadata":{},"sourceType":"module"}