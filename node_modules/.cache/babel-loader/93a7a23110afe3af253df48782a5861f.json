{"ast":null,"code":"var _jsxFileName = \"/home/tanmoy/Desktop/map/Dtest/src/Components/FileLoader/FileLoader.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:5000\";\n\nconst submitForm = (contentType, data, setResponse) => {\n  axios({\n    url: `${API_BASE}/upload`,\n    method: 'POST',\n    data: data,\n    headers: {\n      'Content-Type': contentType\n    }\n  }).then(response => {\n    setResponse(response.data);\n  }).catch(error => {\n    setResponse(\"error\");\n  });\n};\n\nconst FileLoader = ({\n  content\n}) => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [desc, setDesc] = useState(\"\");\n\n  function uploadWithFormData() {}\n\n  function uploadWithJSON() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"File Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => {\n              setTitle(e.target.value);\n            },\n            placeholder: \"Give a title to your upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"File\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            onChange: e => setFile(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: desc,\n            onChange: e => setDesc(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Upload as Form\",\n          onClick: uploadWithFormData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Upload as JSON\",\n          onClick: uploadWithJSON\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileLoader, \"rg6swvWxMGgYUEfOzlk4sQvQ4as=\");\n\n_c = FileLoader;\nexport default FileLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileLoader\");","map":{"version":3,"sources":["/home/tanmoy/Desktop/map/Dtest/src/Components/FileLoader/FileLoader.tsx"],"names":["React","useState","axios","API_BASE","submitForm","contentType","data","setResponse","url","method","headers","then","response","catch","error","FileLoader","content","title","setTitle","file","setFile","desc","setDesc","uploadWithFormData","uploadWithJSON","e","target","value","files"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,QAAQ,GAAG,uBAAjB;;AAEA,MAAMC,UAAU,GAAG,CAACC,WAAD,EAAcC,IAAd,EAAoBC,WAApB,KAA0C;AACzDL,EAAAA,KAAK,CAAC;AACFM,IAAAA,GAAG,EAAG,GAAEL,QAAS,SADf;AAEFM,IAAAA,MAAM,EAAE,MAFN;AAGFH,IAAAA,IAAI,EAAEA,IAHJ;AAIFI,IAAAA,OAAO,EAAE;AACT,sBAAgBL;AADP;AAJP,GAAD,CAAL,CAOOM,IAPP,CAOaC,QAAD,IAAc;AACtBL,IAAAA,WAAW,CAACK,QAAQ,CAACN,IAAV,CAAX;AACC,GATL,EASOO,KATP,CAScC,KAAD,IAAW;AACpBP,IAAAA,WAAW,CAAC,OAAD,CAAX;AACC,GAXL;AAYD,CAbH;;AAeA,MAAMQ,UAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqC;AAAA;;AAErE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACH,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASsB,kBAAT,GAA6B,CAE5B;;AAED,WAASC,cAAT,GAAyB,CAExB;;AAEA,sBACE;AAAA,2BACJ;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA,gCACA;AAAA,gDAEA;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAEP,KAA1B;AACA,YAAA,QAAQ,EAAGQ,CAAD,IAAO;AAAEP,cAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AAA0B,aAD7C;AAEA,YAAA,WAAW,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAQA;AAAA,0CAEA;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,MAAxB;AAA+B,YAAA,QAAQ,EAAGF,CAAD,IAAOL,OAAO,CAACK,CAAC,CAACC,MAAF,CAASE,KAAT,CAAe,CAAf,CAAD;AAAvD;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARA,eAaA;AAAA,iDAEA;AAAU,YAAA,KAAK,EAAEP,IAAjB;AAAuB,YAAA,QAAQ,EAAGI,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAA/C;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbA,eAkBA;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC,gBAA3B;AAA4C,UAAA,OAAO,EAAEJ;AAArD;AAAA;AAAA;AAAA;AAAA,gBAlBA,eAmBA;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC,gBAA3B;AAA4C,UAAA,OAAO,EAAEC;AAArD;AAAA;AAAA;AAAA;AAAA,gBAnBA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA5CD;;GAAMT,U;;KAAAA,U;AA8CN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\ninterface Props {\n  content: string;\n}\nconst API_BASE = \"http://localhost:5000\"\n\nconst submitForm = (contentType, data, setResponse): void => {\n    axios({\n        url: `${API_BASE}/upload`,\n        method: 'POST',\n        data: data,\n        headers: {\n        'Content-Type': contentType\n        }\n        }).then((response) => {\n        setResponse(response.data);\n        }).catch((error) => {\n        setResponse(\"error\");\n        })\n  };\n\nconst FileLoader: React.FC<Props> = ({ content }): React.ReactElement => {\n\n    const [title, setTitle] = useState(\"\");\n const [file, setFile] = useState(null);\n const [desc, setDesc] = useState(\"\");\n\n function uploadWithFormData(){\n\n }\n\n function uploadWithJSON(){\n\n }\n\n  return (\n    <div>\n<div className=\"App\">\n <h2>Upload Form</h2>\n <form>\n <label>\n File Title\n <input type=\"text\" value={title} \n onChange={(e) => { setTitle(e.target.value )}} \n placeholder=\"Give a title to your upload\" />\n </label>\n\n <label>\n File\n <input type=\"file\" name=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n </label>\n\n <label>\n Description\n <textarea value={desc} onChange={(e) => setDesc(e.target.value)}></textarea>\n </label>\n\n <input type=\"button\" value=\"Upload as Form\" onClick={uploadWithFormData} />\n <input type=\"button\" value=\"Upload as JSON\" onClick={uploadWithJSON}/>\n </form>\n </div>\n\n\n    </div>\n  );\n};\n\nexport default FileLoader;\n"]},"metadata":{},"sourceType":"module"}