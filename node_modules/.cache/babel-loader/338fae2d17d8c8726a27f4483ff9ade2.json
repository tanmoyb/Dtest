{"ast":null,"code":"var _jsxFileName = \"/home/tanmoy/Desktop/map/Dtest/src/Components/MainPageContainer/MainPageContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport mapboxgl from \"mapbox-gl\"; // or \"const mapboxgl = require('mapbox-gl');\"\n\nimport FileInput from \"../FileInput/FileInput\";\nimport \"./MainPageContainer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = \"pk.eyJ1IjoidGFubW95bSIsImEiOiJja3N1YTFsem4wa2JhMnFsc3I1M3pmNW9lIn0.xB2fNbAujrVTlCB1yvPkGg\";\n\nconst MainPageContainer = ({\n  content\n}) => {\n  _s();\n\n  const mapContainerRef = useRef(null);\n  const [lng, setLng] = useState(5);\n  const [fileData, setFileData] = useState(\"\");\n  const [lat, setLat] = useState(34);\n  const [zoom, setZoom] = useState(1.5);\n  console.log(\"file\", fileData); // Initialize map when component mounts\n\n  var test = [];\n  const data = {\n    \"location\": {\n      \"lat\": 50.62914,\n      \"lon\": 5.61972\n    }\n  };\n\n  const updateMap = d => {\n    // @ts-ignore\n    data.forEach(function (d) {\n      return {\n        \"type\": \"Point\",\n        \"coordinates\": [d.location.lon, d.location.lat]\n      };\n    });\n  };\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [lng, lat],\n      zoom: zoom\n    }); // Add navigation control (the +/- zoom buttons)\n\n    map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n    console.log(\"file000\", fileData);\n    map.on('load', () => {\n      // Add an image to use as a custom marker\n      map.loadImage('https://docs.mapbox.com/mapbox-gl-js/assets/custom_marker.png', (error, image) => {\n        if (error) throw error;\n        map.addImage('custom-marker', image); // Add a GeoJSON source with 2 points\n\n        map.addSource('points', {\n          'type': 'geojson',\n          'data': {\n            'type': 'FeatureCollection',\n            'features': [{\n              // feature for Mapbox DC\n              'type': 'Feature',\n              'geometry': {\n                'type': 'Point',\n                'coordinates': [-77.03238901390978, 38.913188059745586]\n              },\n              'properties': {\n                'title': 'Mapbox DC'\n              }\n            }, {\n              // feature for Mapbox SF\n              'type': 'Feature',\n              'geometry': {\n                'type': 'Point',\n                'coordinates': [-122.414, 37.776]\n              },\n              'properties': {\n                'title': 'Mapbox SF'\n              }\n            }]\n          }\n        }); // Add a symbol layer\n\n        map.addLayer({\n          'id': 'points',\n          'type': 'symbol',\n          'source': 'points',\n          'layout': {\n            'icon-image': 'custom-marker',\n            // get the title name from the source's \"title\" property\n            'text-field': ['get', 'title'],\n            'text-font': ['Open Sans Semibold', 'Arial Unicode MS Bold'],\n            'text-offset': [0, 1.25],\n            'text-anchor': 'top'\n          }\n        });\n      });\n    }); // Clean up on unmount\n\n    return () => map.remove();\n  }, [fileData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-loader\",\n      children: /*#__PURE__*/_jsxDEV(FileInput, {\n        fileData: fileData,\n        setFileData: setFileData,\n        content: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarStyle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainPageContainer, \"Rdjj65h5Innp+3Fz7aPeBUr/pqg=\");\n\n_c = MainPageContainer;\nexport default MainPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPageContainer\");","map":{"version":3,"sources":["/home/tanmoy/Desktop/map/Dtest/src/Components/MainPageContainer/MainPageContainer.tsx"],"names":["React","useRef","useEffect","useState","mapboxgl","FileInput","accessToken","MainPageContainer","content","mapContainerRef","lng","setLng","fileData","setFileData","lat","setLat","zoom","setZoom","console","log","test","data","updateMap","d","forEach","location","lon","map","Map","container","current","style","center","addControl","NavigationControl","on","loadImage","error","image","addImage","addSource","addLayer","remove"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport mapboxgl from \"mapbox-gl\"; // or \"const mapboxgl = require('mapbox-gl');\"\nimport FileInput from \"../FileInput/FileInput\";\nimport \"./MainPageContainer.css\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoidGFubW95bSIsImEiOiJja3N1YTFsem4wa2JhMnFsc3I1M3pmNW9lIn0.xB2fNbAujrVTlCB1yvPkGg\";\n\ninterface Props {\n  content: string;\n}\n\nconst MainPageContainer: React.FC<Props> = ({\n  content,\n}): React.ReactElement => {\n  const mapContainerRef = useRef(null);\n\n  const [lng, setLng] = useState(5);\n\n  const [fileData, setFileData] = useState(\"\");\n  const [lat, setLat] = useState(34);\n  const [zoom, setZoom] = useState(1.5);\n  console.log(\"file\",fileData)\n  // Initialize map when component mounts\n  var test = [];\n\n  const data ={\"location\": {\"lat\": 50.62914, \"lon\": 5.61972}}\n  const updateMap = (d) => {\n   \n    // @ts-ignore\n    data.forEach(function(d) {\n      return {\n          \"type\": \"Point\",\n          \"coordinates\": [d.location.lon, d.location.lat]\n      };\n  });\n  };\n\n  \n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [lng, lat],\n      zoom: zoom,\n    });\n\n    // Add navigation control (the +/- zoom buttons)\n    map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n\n    \n    console.log(\"file000\",fileData)\n    \n    map.on('load', () => {\n      // Add an image to use as a custom marker\n      map.loadImage(\n      'https://docs.mapbox.com/mapbox-gl-js/assets/custom_marker.png',\n      (error, image) => {\n      if (error) throw error;\n      map.addImage('custom-marker', image);\n      // Add a GeoJSON source with 2 points\n      map.addSource('points', {\n      'type': 'geojson',\n      'data': {\n      'type': 'FeatureCollection',\n      'features': [\n      {\n      // feature for Mapbox DC\n      'type': 'Feature',\n      'geometry': {\n      'type': 'Point',\n      'coordinates': [\n      -77.03238901390978, 38.913188059745586\n      ]\n      },\n      'properties': {\n      'title': 'Mapbox DC'\n      }\n      },\n      {\n      // feature for Mapbox SF\n      'type': 'Feature',\n      'geometry': {\n      'type': 'Point',\n      'coordinates': [-122.414, 37.776]\n      },\n      'properties': {\n      'title': 'Mapbox SF'\n      }\n      }\n      ]\n      }\n      });\n       \n      // Add a symbol layer\n      map.addLayer({\n      'id': 'points',\n      'type': 'symbol',\n      'source': 'points',\n      'layout': {\n      'icon-image': 'custom-marker',\n      // get the title name from the source's \"title\" property\n      'text-field': ['get', 'title'],\n      'text-font': [\n      'Open Sans Semibold',\n      'Arial Unicode MS Bold'\n      ],\n      'text-offset': [0, 1.25],\n      'text-anchor': 'top'\n      }\n      });\n      }\n      );\n      });\n    \n    // Clean up on unmount\n    return () => map.remove();\n  }, [fileData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className=\"root\">\n      <div className=\"file-loader\">\n        <FileInput fileData={fileData} setFileData ={setFileData} content={\"text\"}></FileInput>\n      </div>\n      <div className=\"sidebarStyle\">\n        <div>\n          Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n        </div>\n      </div>\n      <div className=\"map-container\" ref={mapContainerRef} />\n    </div>\n  );\n};\n\nexport default MainPageContainer;\n"]},"metadata":{},"sourceType":"module"}