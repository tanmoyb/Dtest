{"ast":null,"code":"var _jsxFileName = \"/home/tanmoy/Desktop/map/Dtest/src/Components/MainPageContainer/MainPageContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport mapboxgl from \"mapbox-gl\"; // or \"const mapboxgl = require('mapbox-gl');\"\n\nimport FileInput from \"../FileInput/FileInput\";\nimport \"./MainPageContainer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = \"pk.eyJ1IjoidGFubW95bSIsImEiOiJja3N1YTFsem4wa2JhMnFsc3I1M3pmNW9lIn0.xB2fNbAujrVTlCB1yvPkGg\";\n\nconst MainPageContainer = ({\n  content\n}) => {\n  _s();\n\n  const mapContainerRef = useRef(null);\n  const [lng, setLng] = useState(5);\n  const [fileData, setFileData] = useState(\"\");\n  const [lat, setLat] = useState(34);\n  const [zoom, setZoom] = useState(1.5);\n  console.log(\"file\", fileData); // Initialize map when component mounts\n\n  const upDateMap = () => {};\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [lng, lat],\n      zoom: zoom\n    }); // Add navigation control (the +/- zoom buttons)\n\n    map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n    console.log(\"file000\", fileData);\n    map.addSource('point', {\n      type: 'geojson',\n      animate: true,\n      coordinates: [[-76.54, 39.18]]\n    });\n    map.addLayer({\n      id: 'point',\n      \"source\": \"point\",\n      \"type\": \"circle\",\n      \"paint\": {\n        \"circle-radius\": 10,\n        \"circle-color\": \"#000\"\n      }\n    });\n    map.on(\"move\", () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    }); // Clean up on unmount\n\n    return () => map.remove();\n  }, [fileData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-loader\",\n      children: /*#__PURE__*/_jsxDEV(FileInput, {\n        fileData: fileData,\n        setFileData: setFileData,\n        content: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarStyle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainPageContainer, \"Rdjj65h5Innp+3Fz7aPeBUr/pqg=\");\n\n_c = MainPageContainer;\nexport default MainPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPageContainer\");","map":{"version":3,"sources":["/home/tanmoy/Desktop/map/Dtest/src/Components/MainPageContainer/MainPageContainer.tsx"],"names":["React","useRef","useEffect","useState","mapboxgl","FileInput","accessToken","MainPageContainer","content","mapContainerRef","lng","setLng","fileData","setFileData","lat","setLat","zoom","setZoom","console","log","upDateMap","map","Map","container","current","style","center","addControl","NavigationControl","addSource","type","animate","coordinates","addLayer","id","on","getCenter","toFixed","getZoom","remove"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport mapboxgl from \"mapbox-gl\"; // or \"const mapboxgl = require('mapbox-gl');\"\nimport FileInput from \"../FileInput/FileInput\";\nimport \"./MainPageContainer.css\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoidGFubW95bSIsImEiOiJja3N1YTFsem4wa2JhMnFsc3I1M3pmNW9lIn0.xB2fNbAujrVTlCB1yvPkGg\";\n\ninterface Props {\n  content: string;\n}\n\nconst MainPageContainer: React.FC<Props> = ({\n  content,\n}): React.ReactElement => {\n  const mapContainerRef = useRef(null);\n\n  const [lng, setLng] = useState(5);\n\n  const [fileData, setFileData] = useState(\"\");\n  const [lat, setLat] = useState(34);\n  const [zoom, setZoom] = useState(1.5);\n  console.log(\"file\",fileData)\n  // Initialize map when component mounts\n\n  const upDateMap = () => {\n    \n  };\n\n  \n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [lng, lat],\n      zoom: zoom,\n    });\n\n    // Add navigation control (the +/- zoom buttons)\n    map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n\n    \n    console.log(\"file000\",fileData)\n    map.addSource('point', {\n      type: 'geojson',\n      animate: true,\n      coordinates: [\n      [-76.54, 39.18],\n      \n      ]\n      });\n\n  map.addLayer({\n    id: 'point',\n    \"source\": \"point\",\n    \"type\": \"circle\",\n    \"paint\": {\n        \"circle-radius\": 10,\n        \"circle-color\": \"#000\"\n    }\n});\n\n    map.on(\"move\", () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n\n   \n\n    });\n\n    // Clean up on unmount\n    return () => map.remove();\n  }, [fileData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className=\"root\">\n      <div className=\"file-loader\">\n        <FileInput fileData={fileData} setFileData ={setFileData} content={\"text\"}></FileInput>\n      </div>\n      <div className=\"sidebarStyle\">\n        <div>\n          Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n        </div>\n      </div>\n      <div className=\"map-container\" ref={mapContainerRef} />\n    </div>\n  );\n};\n\nexport default MainPageContainer;\n"]},"metadata":{},"sourceType":"module"}